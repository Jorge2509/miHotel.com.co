<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>How often do you contribute to open source projects?</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/QNvtRhGq_Z8/" /><category term="community" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="poll" scheme="searchisko:content:tags" /><author><name>Rikki Endsley</name></author><id>searchisko:content:id:jbossorg_blog-how_often_do_you_contribute_to_open_source_projects</id><updated>2019-04-22T07:05:39Z</updated><published>2019-04-22T07:05:39Z</published><content type="html">&lt;p&gt;According to the most recent &lt;a href="https://insights.stackoverflow.com/survey/2019#developer-profile-_-contributing-to-open-source"&gt;Stack Overflow survey results&lt;/a&gt;, more than 36% of respondents &lt;em&gt;never&lt;/em&gt; contribute to open source projects. I wonder: Would we get different results in a Developer reader survey?&lt;/p&gt; &lt;p&gt;&lt;iframe src="https://docs.google.com/forms/d/e/1FAIpQLSd_nieyUbrVjGJ1Z9LDKWyS-IuM_Ks6Mh9JiQj6UDTgdMNuZA/viewform?embedded=true" width="640" height="541" frameborder="0" marginwidth="0" marginheight="0"&gt;Loading&amp;#8230;&lt;/iframe&gt;&lt;/p&gt; &lt;h2&gt;What readers said last week&lt;/h2&gt; &lt;p&gt;In &lt;a href="https://developers.redhat.com/blog/2019/04/15/whats-your-biggest-work-environment-distraction/"&gt;last week&amp;#8217;s poll&lt;/a&gt;, we asked what your biggest workplace distractions are and almost 30% of respondents pointed to &amp;#8220;drive by&amp;#8221; interruptions from colleagues.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter size-medium wp-image-589437 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/Screen-Shot-2019-04-18-at-9.28.02-AM.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/Screen-Shot-2019-04-18-at-9.28.02-AM-300x159.png" alt="Survey results from last week in a pie chart" width="300" height="159" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/Screen-Shot-2019-04-18-at-9.28.02-AM-300x159.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/Screen-Shot-2019-04-18-at-9.28.02-AM.png 542w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F22%2Fhow-often-do-you-contribute-to-open-source-projects%2F&amp;#38;linkname=How%20often%20do%20you%20contribute%20to%20open%20source%20projects%3F" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F22%2Fhow-often-do-you-contribute-to-open-source-projects%2F&amp;#38;linkname=How%20often%20do%20you%20contribute%20to%20open%20source%20projects%3F" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F22%2Fhow-often-do-you-contribute-to-open-source-projects%2F&amp;#38;linkname=How%20often%20do%20you%20contribute%20to%20open%20source%20projects%3F" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F22%2Fhow-often-do-you-contribute-to-open-source-projects%2F&amp;#38;linkname=How%20often%20do%20you%20contribute%20to%20open%20source%20projects%3F" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F22%2Fhow-often-do-you-contribute-to-open-source-projects%2F&amp;#38;linkname=How%20often%20do%20you%20contribute%20to%20open%20source%20projects%3F" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F22%2Fhow-often-do-you-contribute-to-open-source-projects%2F&amp;#38;linkname=How%20often%20do%20you%20contribute%20to%20open%20source%20projects%3F" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F22%2Fhow-often-do-you-contribute-to-open-source-projects%2F&amp;#38;linkname=How%20often%20do%20you%20contribute%20to%20open%20source%20projects%3F" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F22%2Fhow-often-do-you-contribute-to-open-source-projects%2F&amp;#38;linkname=How%20often%20do%20you%20contribute%20to%20open%20source%20projects%3F" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F22%2Fhow-often-do-you-contribute-to-open-source-projects%2F&amp;#038;title=How%20often%20do%20you%20contribute%20to%20open%20source%20projects%3F" data-a2a-url="https://developers.redhat.com/blog/2019/04/22/how-often-do-you-contribute-to-open-source-projects/" data-a2a-title="How often do you contribute to open source projects?"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/22/how-often-do-you-contribute-to-open-source-projects/"&gt;How often do you contribute to open source projects?&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/QNvtRhGq_Z8" height="1" width="1" alt=""/&gt;</content><summary>According to the most recent Stack Overflow survey results, more than 36% of respondents never contribute to open source projects. I wonder: Would we get different results in a Developer reader survey? Loading… What readers said last week In last week’s poll, we asked what your biggest workplace distractions are and almost 30% of respondents pointed to “drive by” interruptions from colleagues.   T...</summary><dc:creator>Rikki Endsley</dc:creator><dc:date>2019-04-22T07:05:39Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/22/how-often-do-you-contribute-to-open-source-projects/</feedburner:origLink></entry><entry><title>Implicit function declarations: flex’s use of “reallocarray”</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/hPEY7z7sH5w/" /><category term="community" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="fedora" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="gcc" scheme="searchisko:content:tags" /><category term="glibc" scheme="searchisko:content:tags" /><author><name>Arjun Shankar</name></author><id>searchisko:content:id:jbossorg_blog-implicit_function_declarations_flex_s_use_of_reallocarray</id><updated>2019-04-22T07:00:58Z</updated><published>2019-04-22T07:00:58Z</published><content type="html">&lt;p&gt;Several months ago, I took over the maintenance of the &lt;em&gt;flex&lt;/em&gt; package in &lt;a href="https://getfedora.org/"&gt;Fedora&lt;/a&gt; and decided to kick the tires by &lt;em&gt;rebasing&lt;/em&gt; the package in &lt;a href="https://fedoraproject.org/wiki/Releases/Rawhide"&gt;Fedora Rawhide&lt;/a&gt;. I downloaded and hashed the latest tarball at the time, &lt;em&gt;flex-2.6.4&lt;/em&gt;, tweaked the &lt;em&gt;spec&lt;/em&gt; file, and fired up a local build. Unfortunately, it failed with a &lt;code&gt;SIGSEGV&lt;/code&gt; at build time:&lt;/p&gt; &lt;pre&gt;./stage1flex -o stage1scan.c ./scan.l make[2]: *** [Makefile:1695: stage1scan.c] Segmentation fault (core dumped) &lt;/pre&gt; &lt;p&gt;Some debugging with &lt;em&gt;gdb&lt;/em&gt; led me to the conclusion that the segmentation fault was the result of a block of memory returned from the &lt;code&gt;reallocarray&lt;/code&gt; function being written to during flex initialization.  In this article, I&amp;#8217;ll describe the issue further and explain changes made to address it. &lt;span id="more-585327"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Here is a simplified snippet of my &lt;em&gt;gdb&lt;/em&gt; session:&lt;/p&gt; &lt;pre&gt;(gdb) bt #0 check_mul_overflow_size_t (right=1, left=2048, left@entry=0) #1 __GI___libc_reallocarray (optr=0x0, nmemb=2048, elem_size=1) #2 allocate_array at misc.c:147 #3 flexinit at main.c:974 #4 flex_main at main.c:168 #5 __libc_start_main (gdb) fin Run till exit from #0 check_mul_overflow_size_t __GI___libc_reallocarray 33 return realloc (optr, bytes); (gdb) fin Run till exit from #0 __GI___libc_reallocarray in allocate_array 147 mem = reallocarray(NULL, (size_t) size, element_size); Value returned is $1 = (void *) 0x5555557c6420 (gdb) fin Run till exit from #0 allocate_array in flexinit 974 action_array = allocate_character_array (action_size); Value returned is $2 = (void *) 0x557c6420 (gdb) n 975 defs1_offset = prolog_offset = action_offset = action_index = 0; (gdb) n 976 action_array[0] = '\0'; (gdb) n Program received signal SIGSEGV, Segmentation fault. &lt;/pre&gt; &lt;p&gt;I didn&amp;#8217;t notice anything off here right up to the point at which the segfault occurs, but maybe you already did. All &lt;em&gt;I&lt;/em&gt; saw was that the returned pointer was &lt;em&gt;non-NULL&lt;/em&gt; on line &lt;code&gt;974&lt;/code&gt;, but writing to it on line &lt;code&gt;976&lt;/code&gt; resulted in a segfault. It began to look like a &lt;code&gt;malloc&lt;/code&gt; bug.&lt;/p&gt; &lt;p&gt;On a whim, I built the same tarball outside of the Fedora build system. This time, the typical &lt;code&gt;./configure &amp;#38;&amp;#38; make&lt;/code&gt; command line didn&amp;#8217;t segfault at build time. So apparently the difference lay in the build options used by &lt;em&gt;rpmbuild&lt;/em&gt;. Some trial and error led me to the cause: &lt;code&gt;-pie&lt;/code&gt;, the linker flag that produces a position independent executable. Building with &lt;code&gt;-pie&lt;/code&gt; caused the segmentation fault.&lt;/p&gt; &lt;p&gt;Armed with this &amp;#8220;reproducer&amp;#8221; and advice from my colleagues at Red Hat, I set about doing a &lt;em&gt;git-bisect&lt;/em&gt; on the flex sources. &lt;em&gt;HEAD&lt;/em&gt; was building cleanly on the upstream &lt;em&gt;master&lt;/em&gt; branch at that point even with &lt;code&gt;-pie&lt;/code&gt;, so it was just a matter of finding the commit that fixed the build. The commit in question was the fix for the following issue reported against flex upstream:&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/westes/flex/issues/241"&gt;#241: &amp;#8220;implicit declaration of function reallocarray is invalid in C99&amp;#8221;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;So, flex sources didn&amp;#8217;t declare &lt;code&gt;_GNU_SOURCE&lt;/code&gt;, leading to the compiler&amp;#8217;s seeing no declaration of the &lt;em&gt;reallocarray&lt;/em&gt; function. In such cases, the compiler creates an implicit function declaration with the default return type (&lt;code&gt;int&lt;/code&gt;) and generates code accordingly. On 64-bit Intel machines, the &lt;em&gt;int&lt;/em&gt; type is only 32 bits wide while pointers are 64 bits wide. Going back and looking at the gdb session, it then became clear to me that the pointer gets truncated:&lt;/p&gt; &lt;pre&gt;147 mem = reallocarray(NULL, (size_t) size, element_size); Value returned is $1 = (void *) 0x5555557c6420 (gdb) fin Run till exit from #0 allocate_array in flexinit 974 action_array = allocate_character_array (action_size); Value returned is $2 = (void *) 0x557c6420 &lt;/pre&gt; &lt;p&gt;This only happens in position independent executables because the heap gets mapped to a part of the address space where pointers are larger than &lt;code&gt;INT_MAX&lt;/code&gt;, exposing the above flex bug. GCC actually warns of the presence of implicit function declarations via the &lt;code&gt;-Wimplicit-function-declaration&lt;/code&gt; option. It appears that there was a fairly recent &lt;a href="https://fedoraproject.org/wiki/Changes/Fedora26CFlags"&gt;proposal to enable this warning&lt;/a&gt; in Fedora builds, but it was eventually shelved. If enabled, the warning would still cause the flex build to fail—but earlier and at a point where the problem was clear.&lt;/p&gt; &lt;p&gt;At this point, getting the build to compile successfully was a simple matter of backporting the corresponding flex patch that defines &lt;em&gt;_GNU_SOURCE&lt;/em&gt; and exposes the &lt;em&gt;reallocarray&lt;/em&gt; prototype to the compiler.&lt;/p&gt; &lt;p&gt;But we didn&amp;#8217;t just stop there. One of my colleagues, Florian Weimer—a regular contributor to glibc—thought that all this could have been avoided if &lt;em&gt;reallocarray&lt;/em&gt; had been exposed by glibc via the more general &lt;code&gt;_DEFAULT_SOURCE&lt;/code&gt; feature test macro. The change has now been &lt;a href="https://sourceware.org/git/?p=glibc.git;a=commit;h=2bda273aa3"&gt;committed&lt;/a&gt; to glibc upstream and is available since &lt;em&gt;glibc-2.29&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;With this change, we hope to avoid similar situations in other components in Fedora and the glibc user community. &lt;em&gt;glibc&lt;/em&gt; now provides the &lt;em&gt;reallocarray&lt;/em&gt; function prototype unless the user explicitly requires stricter conformance to a given standard.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F22%2Fimplicit-function-declarations-flexs-use-of-reallocarray%2F&amp;#38;linkname=Implicit%20function%20declarations%3A%20flex%E2%80%99s%20use%20of%20%E2%80%9Creallocarray%E2%80%9D" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F22%2Fimplicit-function-declarations-flexs-use-of-reallocarray%2F&amp;#38;linkname=Implicit%20function%20declarations%3A%20flex%E2%80%99s%20use%20of%20%E2%80%9Creallocarray%E2%80%9D" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F22%2Fimplicit-function-declarations-flexs-use-of-reallocarray%2F&amp;#38;linkname=Implicit%20function%20declarations%3A%20flex%E2%80%99s%20use%20of%20%E2%80%9Creallocarray%E2%80%9D" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F22%2Fimplicit-function-declarations-flexs-use-of-reallocarray%2F&amp;#38;linkname=Implicit%20function%20declarations%3A%20flex%E2%80%99s%20use%20of%20%E2%80%9Creallocarray%E2%80%9D" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F22%2Fimplicit-function-declarations-flexs-use-of-reallocarray%2F&amp;#38;linkname=Implicit%20function%20declarations%3A%20flex%E2%80%99s%20use%20of%20%E2%80%9Creallocarray%E2%80%9D" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F22%2Fimplicit-function-declarations-flexs-use-of-reallocarray%2F&amp;#38;linkname=Implicit%20function%20declarations%3A%20flex%E2%80%99s%20use%20of%20%E2%80%9Creallocarray%E2%80%9D" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F22%2Fimplicit-function-declarations-flexs-use-of-reallocarray%2F&amp;#38;linkname=Implicit%20function%20declarations%3A%20flex%E2%80%99s%20use%20of%20%E2%80%9Creallocarray%E2%80%9D" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F22%2Fimplicit-function-declarations-flexs-use-of-reallocarray%2F&amp;#38;linkname=Implicit%20function%20declarations%3A%20flex%E2%80%99s%20use%20of%20%E2%80%9Creallocarray%E2%80%9D" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F22%2Fimplicit-function-declarations-flexs-use-of-reallocarray%2F&amp;#038;title=Implicit%20function%20declarations%3A%20flex%E2%80%99s%20use%20of%20%E2%80%9Creallocarray%E2%80%9D" data-a2a-url="https://developers.redhat.com/blog/2019/04/22/implicit-function-declarations-flexs-use-of-reallocarray/" data-a2a-title="Implicit function declarations: flex’s use of “reallocarray”"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/22/implicit-function-declarations-flexs-use-of-reallocarray/"&gt;Implicit function declarations: flex&amp;#8217;s use of &amp;#8220;reallocarray&amp;#8221;&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/hPEY7z7sH5w" height="1" width="1" alt=""/&gt;</content><summary>Several months ago, I took over the maintenance of the flex package in Fedora and decided to kick the tires by rebasing the package in Fedora Rawhide. I downloaded and hashed the latest tarball at the time, flex-2.6.4, tweaked the spec file, and fired up a local build. Unfortunately, it failed with a SIGSEGV at build time: ./stage1flex -o stage1scan.c ./scan.l make[2]: *** [Makefile:1695: stage1sc...</summary><dc:creator>Arjun Shankar</dc:creator><dc:date>2019-04-22T07:00:58Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/22/implicit-function-declarations-flexs-use-of-reallocarray/</feedburner:origLink></entry><entry><title>Modern business logic tooling workshop, lab 3: Create a domain model</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/sYkNxz0cDIc/" /><category term="Architecture" scheme="searchisko:content:tags" /><category term="developer" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="integration" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="process automation" scheme="searchisko:content:tags" /><category term="Products" scheme="searchisko:content:tags" /><category term="Red Hat Decision Manager" scheme="searchisko:content:tags" /><category term="Red Hat Process Automation Manager" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-modern_business_logic_tooling_workshop_lab_3_create_a_domain_model</id><updated>2019-04-19T07:10:19Z</updated><published>2019-04-19T07:10:19Z</published><content type="html">&lt;p&gt;Since starting to update my &lt;a href="https://bpmworkshop.gitlab.io/#/" target="_blank" rel="noopener noreferrer"&gt;free online rules and process automation workshops&lt;/a&gt; that showcase how to get started using modern business logic tooling, we&amp;#8217;ve come a long way with process automation. The updates started with moving from JBoss BPM to Red Hat Decision Manager and from JBoss BPM Suite to Red Hat Process Automation Manager.&lt;/p&gt; &lt;p&gt;The &lt;a href="https://developers.redhat.com/blog/2018/12/19/modern-business-logic-tooling-workshop-lab-1-installation/"&gt;first lab update&lt;/a&gt; showed how to install Red Hat Decision Manager on your laptop, and the&lt;a href="https://developers.redhat.com/blog/2019/04/01/modern-business-logic-tooling-workshop-lab-2-create-a-new-project/"&gt; second lab&lt;/a&gt; showed how to create a new project.  This article highlights the newest lab update for Red Hat Process Automation Manager, where you&amp;#8217;ll learn how to create a domain model.&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s take a look at the lab, shall we?&lt;/p&gt; &lt;p&gt;&lt;span id="more-585897"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;Lab 3: Create a domain model&lt;/h3&gt; &lt;p&gt;This lab is the latest step on learning to develop a process integration project. It&amp;#8217;s a step by step guide on how to create your first domain model. The easiest way is to just &lt;a href="https://bpmworkshop.gitlab.io/rhpam/lab03.html" target="_blank" rel="noopener noreferrer"&gt;jump right into lab 3&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;&lt;a href="https://bpmworkshop.gitlab.io/rhpam/lab03.html"&gt;&lt;img class=" alignleft wp-image-585917 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/Screenshot-2019-04-10-at-15.59.52.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/Screenshot-2019-04-10-at-15.59.52.png" alt="" width="663" height="380" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/Screenshot-2019-04-10-at-15.59.52.png 663w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/Screenshot-2019-04-10-at-15.59.52-300x172.png 300w" sizes="(max-width: 663px) 100vw, 663px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Comments or feedback on any part of the workshop that might not be clear, just reach out. Stay tuned for the next lab update, coming soon!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F19%2Fmodern-business-logic-tooling-workshop-lab-3-create-a-domain-model%2F&amp;#38;linkname=Modern%20business%20logic%20tooling%20workshop%2C%20lab%203%3A%20Create%20a%20domain%20model" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F19%2Fmodern-business-logic-tooling-workshop-lab-3-create-a-domain-model%2F&amp;#38;linkname=Modern%20business%20logic%20tooling%20workshop%2C%20lab%203%3A%20Create%20a%20domain%20model" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F19%2Fmodern-business-logic-tooling-workshop-lab-3-create-a-domain-model%2F&amp;#38;linkname=Modern%20business%20logic%20tooling%20workshop%2C%20lab%203%3A%20Create%20a%20domain%20model" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F19%2Fmodern-business-logic-tooling-workshop-lab-3-create-a-domain-model%2F&amp;#38;linkname=Modern%20business%20logic%20tooling%20workshop%2C%20lab%203%3A%20Create%20a%20domain%20model" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F19%2Fmodern-business-logic-tooling-workshop-lab-3-create-a-domain-model%2F&amp;#38;linkname=Modern%20business%20logic%20tooling%20workshop%2C%20lab%203%3A%20Create%20a%20domain%20model" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F19%2Fmodern-business-logic-tooling-workshop-lab-3-create-a-domain-model%2F&amp;#38;linkname=Modern%20business%20logic%20tooling%20workshop%2C%20lab%203%3A%20Create%20a%20domain%20model" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F19%2Fmodern-business-logic-tooling-workshop-lab-3-create-a-domain-model%2F&amp;#38;linkname=Modern%20business%20logic%20tooling%20workshop%2C%20lab%203%3A%20Create%20a%20domain%20model" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F19%2Fmodern-business-logic-tooling-workshop-lab-3-create-a-domain-model%2F&amp;#38;linkname=Modern%20business%20logic%20tooling%20workshop%2C%20lab%203%3A%20Create%20a%20domain%20model" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F19%2Fmodern-business-logic-tooling-workshop-lab-3-create-a-domain-model%2F&amp;#038;title=Modern%20business%20logic%20tooling%20workshop%2C%20lab%203%3A%20Create%20a%20domain%20model" data-a2a-url="https://developers.redhat.com/blog/2019/04/19/modern-business-logic-tooling-workshop-lab-3-create-a-domain-model/" data-a2a-title="Modern business logic tooling workshop, lab 3: Create a domain model"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/19/modern-business-logic-tooling-workshop-lab-3-create-a-domain-model/"&gt;Modern business logic tooling workshop, lab 3: Create a domain model&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/sYkNxz0cDIc" height="1" width="1" alt=""/&gt;</content><summary>Since starting to update my free online rules and process automation workshops that showcase how to get started using modern business logic tooling, we’ve come a long way with process automation. The updates started with moving from JBoss BPM to Red Hat Decision Manager and from JBoss BPM Suite to Red Hat Process Automation Manager. The first lab update showed how to install Red Hat Decision Manag...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-04-19T07:10:19Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/19/modern-business-logic-tooling-workshop-lab-3-create-a-domain-model/</feedburner:origLink></entry><entry><title>Not all OpenJDK 12 builds include Shenandoah: Here’s why</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/7T-7EgPMdl8/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="Modern App Dev" scheme="searchisko:content:tags" /><category term="Red Hat Enterprise Linux" scheme="searchisko:content:tags" /><author><name>Andrew Haley</name></author><id>searchisko:content:id:jbossorg_blog-not_all_openjdk_12_builds_include_shenandoah_here_s_why</id><updated>2019-04-19T07:01:28Z</updated><published>2019-04-19T07:01:28Z</published><content type="html">&lt;p&gt;&lt;a href="https://openjdk.java.net/projects/jdk/12/"&gt;OpenJDK 12 is now out&lt;/a&gt;, and it has new features. These are:&lt;/p&gt; &lt;p&gt;189: Shenandoah: A Low-Pause-Time Garbage Collector (Experimental)&lt;br /&gt; 230: Microbenchmark Suite&lt;br /&gt; 325: Switch Expressions (Preview)&lt;br /&gt; 334: JVM Constants API&lt;br /&gt; 340: One AArch64 Port, Not Two&lt;br /&gt; 341: Default CDS Archives&lt;br /&gt; 344: Abortable Mixed Collections for G1&lt;br /&gt; 346: Promptly Return Unused Committed Memory from G1&lt;/p&gt; &lt;p&gt;When I follow the link from the OpenJDK 12 project page to the &lt;a href="https://jdk.java.net/12/"&gt;open source builds page&lt;/a&gt;, I see the downloadable binaries. I download the Linux binary and install it, then see if the first item on the feature list, Shenandoah, works:&lt;/p&gt; &lt;pre&gt;$ ./jdk-12/bin/java -XX:+UnlockExperimentalVMOptions -XX:+UseShenandoahGC -cp ~ Hello Error occurred during initialization of VM Option -XX:+UseShenandoahGC not supported&lt;/pre&gt; &lt;p&gt;Oh! What is going on?&lt;span id="more-581927"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;A little history: &lt;a href="https://wiki.openjdk.java.net/display/shenandoah/Main"&gt;Shenandoah&lt;/a&gt;, a high-performance low-pause-time garbage collector, is a Red Hat-led project. When we first proposed to contribute Shenandoah to OpenJDK, Oracle made it clear that &lt;a href="https://bugs.openjdk.java.net/browse/JDK-8215030"&gt;they didn&amp;#8217;t want to support it&lt;/a&gt;. That&amp;#8217;s fair enough: OpenJDK is free software, so you don&amp;#8217;t have to support anything you don&amp;#8217;t want. We told Oracle that we&amp;#8217;d work with them to design a really clean pluggable garbage-collector interface that allows anyone easily to select the garbage collectors to include in their builds. We did that together, and Shenandoah went in to JDK 12.&lt;/p&gt; &lt;p&gt;Evidently Oracle has chosen not to build Shenandoah. They aren&amp;#8217;t doing anything strictly wrong by excluding it, but something doesn&amp;#8217;t feel right to me. These builds aren&amp;#8217;t supported by Oracle—you need their commercial binaries to get support—so why exclude Shenandoah? It might simply be that they used their standard build scripts to build their open source binaries. However, in a rather feature-light OpenJDK release, I find it odd for open source builds to exclude one of the most significant contributions. I really appreciate Oracle providing GPL-licensed OpenJDK builds, but I wish they&amp;#8217;d build all of it.&lt;/p&gt; &lt;p&gt;All is not lost, though. If you want to try Shenandoah on Red Hat Enterprise Linux or Fedora, it&amp;#8217;s supported on all of our builds from JDK 8 onward; just use the software installation tool or, for example,&lt;/p&gt; &lt;pre&gt; $ yum install java-11-openjdk-devel&lt;/pre&gt; &lt;p&gt;If you want to try JDK 12, packages for Fedora and Red Hat Enterprise Linux (via &lt;a href="https://fedoraproject.org/wiki/EPEL"&gt;EPEL&lt;/a&gt;) will soon be available. For other systems, &lt;a href="https://adoptopenjdk.net/"&gt;AdoptOpenJDK&lt;/a&gt; provides JDK 12 binaries, all of which support Shenandoah.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F19%2Fnot-all-openjdk-12-builds-include-shenandoah-heres-why%2F&amp;#38;linkname=Not%20all%20OpenJDK%2012%20builds%20include%20Shenandoah%3A%20Here%E2%80%99s%20why" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F19%2Fnot-all-openjdk-12-builds-include-shenandoah-heres-why%2F&amp;#38;linkname=Not%20all%20OpenJDK%2012%20builds%20include%20Shenandoah%3A%20Here%E2%80%99s%20why" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F19%2Fnot-all-openjdk-12-builds-include-shenandoah-heres-why%2F&amp;#38;linkname=Not%20all%20OpenJDK%2012%20builds%20include%20Shenandoah%3A%20Here%E2%80%99s%20why" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F19%2Fnot-all-openjdk-12-builds-include-shenandoah-heres-why%2F&amp;#38;linkname=Not%20all%20OpenJDK%2012%20builds%20include%20Shenandoah%3A%20Here%E2%80%99s%20why" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F19%2Fnot-all-openjdk-12-builds-include-shenandoah-heres-why%2F&amp;#38;linkname=Not%20all%20OpenJDK%2012%20builds%20include%20Shenandoah%3A%20Here%E2%80%99s%20why" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F19%2Fnot-all-openjdk-12-builds-include-shenandoah-heres-why%2F&amp;#38;linkname=Not%20all%20OpenJDK%2012%20builds%20include%20Shenandoah%3A%20Here%E2%80%99s%20why" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F19%2Fnot-all-openjdk-12-builds-include-shenandoah-heres-why%2F&amp;#38;linkname=Not%20all%20OpenJDK%2012%20builds%20include%20Shenandoah%3A%20Here%E2%80%99s%20why" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F19%2Fnot-all-openjdk-12-builds-include-shenandoah-heres-why%2F&amp;#38;linkname=Not%20all%20OpenJDK%2012%20builds%20include%20Shenandoah%3A%20Here%E2%80%99s%20why" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F19%2Fnot-all-openjdk-12-builds-include-shenandoah-heres-why%2F&amp;#038;title=Not%20all%20OpenJDK%2012%20builds%20include%20Shenandoah%3A%20Here%E2%80%99s%20why" data-a2a-url="https://developers.redhat.com/blog/2019/04/19/not-all-openjdk-12-builds-include-shenandoah-heres-why/" data-a2a-title="Not all OpenJDK 12 builds include Shenandoah: Here’s why"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/19/not-all-openjdk-12-builds-include-shenandoah-heres-why/"&gt;Not all OpenJDK 12 builds include Shenandoah: Here&amp;#8217;s why&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/7T-7EgPMdl8" height="1" width="1" alt=""/&gt;</content><summary>OpenJDK 12 is now out, and it has new features. These are: 189: Shenandoah: A Low-Pause-Time Garbage Collector (Experimental) 230: Microbenchmark Suite 325: Switch Expressions (Preview) 334: JVM Constants API 340: One AArch64 Port, Not Two 341: Default CDS Archives 344: Abortable Mixed Collections for G1 346: Promptly Return Unused Committed Memory from G1 When I follow the link from the OpenJDK 1...</summary><dc:creator>Andrew Haley</dc:creator><dc:date>2019-04-19T07:01:28Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/19/not-all-openjdk-12-builds-include-shenandoah-heres-why/</feedburner:origLink></entry><entry><title>Integration blueprint example for process automation (part 7)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/4x_lnfRnqZo/" /><category term="Agile Integration" scheme="searchisko:content:tags" /><category term="Architecture" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="developer" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="integration" scheme="searchisko:content:tags" /><category term="JBoss Fuse" scheme="searchisko:content:tags" /><category term="Modern App Dev" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="process automation" scheme="searchisko:content:tags" /><category term="Products" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-integration_blueprint_example_for_process_automation_part_7</id><updated>2019-04-19T07:00:40Z</updated><published>2019-04-19T07:00:40Z</published><content type="html">&lt;p&gt;In &lt;a href="https://developers.redhat.com/blog/2019/01/18/integration-of-storage-services-part-6/"&gt;Part 6 of this series&lt;/a&gt;, we looked into details that determine how your integration becomes the key to transforming your customer experience. It started with laying out the process of how I&amp;#8217;ve approached the use case by researching successful customer portfolio solutions as the basis for a generic architectural blueprint.&lt;/p&gt; &lt;p&gt;Having completed our discussions on the blueprint details, it&amp;#8217;s time to look at a few specific examples. This article walks you through an example integration scenario showing how expanding the previously discussed details provides blueprints for your own integration scenarios.&lt;/p&gt; &lt;p&gt;&lt;span id="more-585857"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;Blueprint scenario&lt;/h3&gt; &lt;p&gt;As mentioned before, the architectural details covered here are based on real customer integration solutions using open source technologies. The example scenario presented here is a &lt;i&gt;generic common blueprint&lt;/i&gt; that was uncovered researching customer solutions. It&amp;#8217;s my intent to provide a blueprint that provides guidance and not deep technical details.&lt;/p&gt; &lt;p&gt;This section covers the visual representations as presented, but it&amp;#8217;s expected that they&amp;#8217;ll be evolving over time. There are many ways to represent each element in this architectural blueprint, but I&amp;#8217;ve chosen icons, text, and colors that I hope are going to make it all easy to absorb. Feel free to post comments at the bottom of this post, or &lt;a href="https://www.schabell.org/p/contact.html" target="_blank" rel="noopener noreferrer"&gt;contact me directly&lt;/a&gt; with your feedback.&lt;/p&gt; &lt;div style="width: 330px" class="wp-caption alignright"&gt;&lt;a href="https://4.bp.blogspot.com/-mbkssc0vxL4/XDzkGGVVPKI/AAAAAAAAtZk/JSkh6uy95icCGVTsoDKzP5CX6xNJy0fKwCLcBGAs/s1600/Screenshot%2B2019-01-14%2Bat%2B14.33.22.png"&gt;&lt;img src="https://4.bp.blogspot.com/-mbkssc0vxL4/XDzkGGVVPKI/AAAAAAAAtZk/JSkh6uy95icCGVTsoDKzP5CX6xNJy0fKwCLcBGAs/s320/Screenshot%2B2019-01-14%2Bat%2B14.33.22.png" alt="omnichannel customer experience" width="320" height="203" border="0" data-original-height="1019" data-original-width="1600" /&gt;&lt;/a&gt;&lt;p class="wp-caption-text"&gt;Figure 1: Process integration.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Now let&amp;#8217;s take a look at the details in this blueprint and outline the solution.&lt;/p&gt; &lt;h3&gt;Process integration&lt;/h3&gt; &lt;p&gt;The example blueprint shown in Figure 1 outlines how to integrate automation into your architecture. In this example, starting from the top, a mobile device is used to connect to your services through an API gateway. It&amp;#8217;s leveraging a group of microservices that provide &lt;i&gt;front-end&lt;/i&gt; functionality, everything from push notifications, synchronization, to simple more complex activities that front-end applications need to service their clients.&lt;/p&gt; &lt;p&gt;These &lt;i&gt;front-end microservices&lt;/i&gt; are gathering data and information from the various organizational backend systems by working through &lt;i&gt;integration microservices&lt;/i&gt;. There is a conscious effort here to keep this blueprint example as concise as possible, therefore the integration of various potential &lt;i&gt;back-end systems&lt;/i&gt; has been simplified to a single representative box.&lt;/p&gt; &lt;p&gt;When interaction with process automation is desired, the mobile application works with &lt;i&gt;process facade microservices&lt;/i&gt; that expose any functionality of the &lt;i&gt;process server&lt;/i&gt;, which leverages &lt;i&gt;container native storage&lt;/i&gt; highlighting container-based storage options featured by container platforms.&lt;/p&gt; &lt;h3&gt;Third-party services&lt;/h3&gt; &lt;div style="width: 330px" class="wp-caption alignright"&gt;&lt;a href="https://2.bp.blogspot.com/-gIqn_rmoyEA/XD3ESPT5Z2I/AAAAAAAAtZ4/cXddXr3WBhgpZLh4wNhW1tq0YqkZSpYagCLcBGAs/s1600/Screenshot%2B2019-01-15%2Bat%2B06.30.03.png"&gt;&lt;img src="https://2.bp.blogspot.com/-gIqn_rmoyEA/XD3ESPT5Z2I/AAAAAAAAtZ4/cXddXr3WBhgpZLh4wNhW1tq0YqkZSpYagCLcBGAs/s320/Screenshot%2B2019-01-15%2Bat%2B06.30.03.png" alt="omnichannel customer experience" width="320" height="196" border="0" data-original-height="980" data-original-width="1600" /&gt;&lt;/a&gt;&lt;p class="wp-caption-text"&gt;Figure 2: Process integration with third-party services.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;As many organizations have to deal with third-party legacy decisions in their architectures, it makes sense to show the versatility that open source integration technology offers. It&amp;#8217;s easy to lean on metaphors where open standards in open source integration solutions offer organizations the &lt;a href="http://www.fundinguniverse.com/company-histories/victorinox-ag-history/" target="_blank" rel="noopener noreferrer"&gt;&lt;i&gt;versatility of a  Swiss Army knife&lt;/i&gt;&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The blueprint shown in Figure 2  expands the original process integration use case with a &lt;i&gt;third-party service platform&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;Without specifying this &lt;i&gt;third-party service platform&lt;/i&gt;, it&amp;#8217;s clear that leveraging the &lt;i&gt;integration microservices&lt;/i&gt; an organization can establish a separation from legacy technology choices that might not be standing the test of time.&lt;/p&gt; &lt;h3&gt;What&amp;#8217;s next&lt;/h3&gt; &lt;p&gt;This overview covers the first example architecture blueprints on process integration for omnichannel customer experience use case.&lt;/p&gt; &lt;p class="selectionShareable"&gt;An overview of the series on omnichannel customer experience portfolio architecture blueprint can be found here:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/28/integration-is-key-to-customer-experience/"&gt;Part 1: How integration is key to customer experience&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/30/common-architectural-elements-for-modern-integration-architectures/"&gt;Part 2: Common architectural elements for modern integration architectures&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/12/14/integration-of-external-application-details-part-3/"&gt;Part 3: Integration of external application details&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/12/20/integration-of-api-management-details-part-4/"&gt;Part 4: Integration of API management details&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2019/01/04/integration-of-container-platform-essentials-part-5/" target="_blank" rel="noopener noreferrer"&gt;Part 5: Integration of container platform essentials&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2019/01/18/integration-of-storage-services-part-6/" target="_blank" rel="noopener noreferrer"&gt;Part 6: Integration of storage services&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Part 7: Integration blueprint example for process automation (this article)&lt;/li&gt; &lt;li&gt;More example integration blueprints&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Catch up on any articles you missed by following one of the links above.&lt;/p&gt; &lt;p&gt;Next in this series, we will start looking at more specific integration architecture blueprints that tie in all the elements we&amp;#8217;ve discussed as part of a specific case in an architecture for omnichannel customer experience.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F19%2Fintegration-blueprint-example-for-process-automation-part-7%2F&amp;#38;linkname=Integration%20blueprint%20example%20for%20process%20automation%20%28part%207%29" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F19%2Fintegration-blueprint-example-for-process-automation-part-7%2F&amp;#38;linkname=Integration%20blueprint%20example%20for%20process%20automation%20%28part%207%29" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F19%2Fintegration-blueprint-example-for-process-automation-part-7%2F&amp;#38;linkname=Integration%20blueprint%20example%20for%20process%20automation%20%28part%207%29" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F19%2Fintegration-blueprint-example-for-process-automation-part-7%2F&amp;#38;linkname=Integration%20blueprint%20example%20for%20process%20automation%20%28part%207%29" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F19%2Fintegration-blueprint-example-for-process-automation-part-7%2F&amp;#38;linkname=Integration%20blueprint%20example%20for%20process%20automation%20%28part%207%29" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F19%2Fintegration-blueprint-example-for-process-automation-part-7%2F&amp;#38;linkname=Integration%20blueprint%20example%20for%20process%20automation%20%28part%207%29" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F19%2Fintegration-blueprint-example-for-process-automation-part-7%2F&amp;#38;linkname=Integration%20blueprint%20example%20for%20process%20automation%20%28part%207%29" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F19%2Fintegration-blueprint-example-for-process-automation-part-7%2F&amp;#38;linkname=Integration%20blueprint%20example%20for%20process%20automation%20%28part%207%29" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F19%2Fintegration-blueprint-example-for-process-automation-part-7%2F&amp;#038;title=Integration%20blueprint%20example%20for%20process%20automation%20%28part%207%29" data-a2a-url="https://developers.redhat.com/blog/2019/04/19/integration-blueprint-example-for-process-automation-part-7/" data-a2a-title="Integration blueprint example for process automation (part 7)"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/19/integration-blueprint-example-for-process-automation-part-7/"&gt;Integration blueprint example for process automation (part 7)&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/4x_lnfRnqZo" height="1" width="1" alt=""/&gt;</content><summary>In Part 6 of this series, we looked into details that determine how your integration becomes the key to transforming your customer experience. It started with laying out the process of how I’ve approached the use case by researching successful customer portfolio solutions as the basis for a generic architectural blueprint. Having completed our discussions on the blueprint details, it’s time to loo...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-04-19T07:00:40Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/19/integration-blueprint-example-for-process-automation-part-7/</feedburner:origLink></entry><entry><title>This week in JBoss (18th April 2019): Onward with Quarkus!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/OA_EYVZ8nS8/this-week-in-jboss-18th-april-2019-onward-with-quarkus" /><category term="Blockchain" scheme="searchisko:content:tags" /><category term="BPM" scheme="searchisko:content:tags" /><category term="Drools" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_weeklyeditorial" scheme="searchisko:content:tags" /><category term="GraalVM" scheme="searchisko:content:tags" /><category term="hibernate-orm" scheme="searchisko:content:tags" /><category term="hibernate-search" scheme="searchisko:content:tags" /><category term="hibernate_search" scheme="searchisko:content:tags" /><category term="infinispan" scheme="searchisko:content:tags" /><category term="jBPM" scheme="searchisko:content:tags" /><category term="keycloak" scheme="searchisko:content:tags" /><category term="polyglot" scheme="searchisko:content:tags" /><category term="quarkus" scheme="searchisko:content:tags" /><category term="red hat summit" scheme="searchisko:content:tags" /><author><name>Romain Pelisse</name></author><id>searchisko:content:id:jbossorg_blog-this_week_in_jboss_18th_april_2019_onward_with_quarkus</id><updated>2019-04-18T17:04:39Z</updated><published>2019-04-18T17:04:39Z</published><content type="html">&lt;!-- [DocumentBodyStart:c2652250-43cc-4543-bbfb-0fd18a0879fd] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p dir="ltr"&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #000000; font-style: italic;"&gt;With something things happening lately, we have (again) missed an editorial two weeks ago! All our apology about that, but this one will catch you up if you have missed anything. No surprise, only a few weeks after its releases, Quarkus, and its beloved friend, GraalVM, are still the center of the attention! (as it should be!!!)&lt;/span&gt;&lt;/p&gt;&lt;center&gt;&lt;a href="https://www.flickr.com/photos/europeanspaceagency/31598643117/" rel="nofollow"&gt;&lt;img alt="The smoking gun of a newborn star" height="500" src="https://live.staticflickr.com/7915/31598643117_7346a84387.jpg" width="485"/&gt;&lt;/a&gt;&lt;/center&gt;&lt;h2 dir="ltr" style="margin-top: 18pt; margin-bottom: 6pt;"&gt;&lt;span style="font-size: 16pt; font-family: Arial; color: #000000; font-weight: 400;"&gt;Quarkus and GraalVM&lt;/span&gt;&lt;/h2&gt;&lt;p dir="ltr"&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #000000;"&gt;With its recent releases, Quarkus is certainly a trending item! Especially when we see how far the project can go with coupled with GraalVM. And this potential is certainly leading to some exciting experiments like: &lt;/span&gt;&lt;a class="jive-link-external-small" href="https://lburgazzoli.github.io/2019/03/28/Adventures-in-GraalVM-polyglot-Camel-k-native-routes-with-Quarkus.html" rel="nofollow"&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #1155cc;"&gt;Adventures in GraalVM: polyglot Camel (k) native routes with Quarkus&lt;/span&gt;&lt;/a&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #000000;"&gt;, or &lt;/span&gt;&lt;a class="jive-link-external-small" href="http://blog.athico.com/2019/03/droolsjs-towards-polyglot-drools-on.html" rel="nofollow"&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #1155cc;"&gt;Towards a Polyglot Drools on GraalVM (with Bonus Tech-Lead Prank)&lt;/span&gt;&lt;/a&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #000000;"&gt;! &lt;/span&gt;&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p dir="ltr"&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #000000;"&gt;Quarkus being a very new and innovative context of execution for an application, it is to be expected for people to try to migrate their own application. If you plan to do so, this article on &lt;/span&gt;&lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/04/12/migrating-java-applications-to-quarkus-lessons-learned/" rel="nofollow"&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #1155cc;"&gt;Migrating Java applications to Quarkus: Lessons learned&lt;/span&gt;&lt;/a&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #000000;"&gt; is a &amp;ldquo;must-read&amp;#8221;! After that, you may want to take a look at this one From zero to &lt;/span&gt;&lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/04/09/from-zero-to-quarkus-and-knative-the-easy-way/" rel="nofollow"&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #1155cc;"&gt;Quarkus and Knative: The easy way&lt;/span&gt;&lt;/a&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #000000;"&gt;. With those two articles, you should be set to go even further in your exploration of Quarkus!&lt;/span&gt;&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p dir="ltr"&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #000000;"&gt;Note: If you happen to be able to read french, note that I will also release an article on Quarkus in &lt;/span&gt;&lt;a class="jive-link-external-small" href="https://www.gnulinuxmag.com/" rel="nofollow"&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #1155cc;"&gt;next month&amp;#8217;s issue of GNU/Linux Magazine France&lt;/span&gt;&lt;/a&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #000000;"&gt;.&lt;/span&gt;&lt;/p&gt;&lt;h2 dir="ltr" style="margin-top: 12pt; margin-bottom: 12pt;"&gt;&lt;span style="font-size: 16pt; font-family: Arial; color: #000000; font-weight: 400;"&gt;Retrospective on the bmpNEXT&lt;/span&gt;&lt;/h2&gt;&lt;center&gt;&lt;a href="https://bpmnext.com/wp-content/uploads/2012/05/bpmNEXT_logo.png"&gt;&lt;img src="https://bpmnext.com/wp-content/uploads/2012/05/bpmNEXT_logo.png"/&gt;&lt;/a&gt;&lt;/center&gt;&lt;p dir="ltr" style="margin-top: 12pt; margin-bottom: 12pt;"&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #000000;"&gt;If you are interested in rules engines and processes manager, but you happen to had no chance to join the bpmNEXT conference last week, here a few impressions for you (along with some teasing about our upcoming Red Hat Summit):&lt;/span&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span dir="ltr" style="margin-top: 12pt;"&gt;&lt;a class="jive-link-external-small" href="http://kverlaen.blogspot.com/2019/04/bpmnext-2019-impressions-day-1.html" rel="nofollow"&gt;&lt;span style="font-size: 11pt; color: #1155cc;"&gt;Processes, Rules and Events: bpmNEXT 2019 impressions, day 1&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span dir="ltr"&gt;&lt;a class="jive-link-external-small" href="http://kverlaen.blogspot.com/2019/04/bpmnext-2019-impressions-day-1-part-2.html" rel="nofollow"&gt;&lt;span style="font-size: 11pt; color: #1155cc;"&gt;Processes, Rules and Events: bpmNEXT 2019 impressions, day 1 part 2&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span dir="ltr" style="margin-bottom: 12pt;"&gt;&lt;a class="jive-link-external-small" href="http://kverlaen.blogspot.com/2019/04/bpmnext-2019-and-red-hat-summit-2019.html" rel="nofollow"&gt;&lt;span style="font-size: 11pt; color: #1155cc;"&gt;Processes, Rules and Events: bpmNEXT 2019 and Red Hat Summit 2019&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span dir="ltr" style="margin-top: 12pt; margin-bottom: 12pt;"&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #000000;"&gt;Still relating to rules, especially, in this case, drools, we also mentioned above, in the section about Quarkus, this quite cool article&amp;#160; &lt;/span&gt;&lt;a class="jive-link-external-small" href="http://blog.athico.com/2019/03/droolsjs-towards-polyglot-drools-on.html" rel="nofollow"&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #1155cc;"&gt;Drools &amp;amp; jBPM: drools.js: Towards a Polyglot Drools on GraalVM (with Bonus Tech-Lead Prank)&lt;/span&gt;&lt;/a&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #000000;"&gt; ! We&amp;#8217;ve repeated here so to be sure you don&amp;#8217;t miss it &lt;span aria-label="Wink" class="emoticon-inline emoticon_wink" style="height:16px;width:16px;"&gt;&lt;/span&gt; ! &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 dir="ltr" style="margin-top: 18pt; margin-bottom: 6pt;"&gt;&lt;span style="font-size: 16pt; font-family: Arial; color: #000000; font-weight: 400;"&gt;Evangelist's Corner&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color: #000000; font-size: 11pt; font-family: Arial;"&gt;As always, our own Eric D. Schabell has been quite prolific, especially has he has joined several conferences:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span dir="ltr" style="margin-top: 12pt;"&gt;&lt;a class="jive-link-external-small" href="http://www.schabell.org/2019/04/devconfus-2019-open-source-career-with-automation-integration.html" rel="nofollow"&gt;&lt;span style="font-size: 11pt; color: #1155cc;"&gt;DevConf.US 2019 - Open Source Career with Automation Integrati&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span dir="ltr"&gt;&lt;a class="jive-link-external-small" href="http://www.schabell.org/2019/04/devops-days-raleigh-2019-devops-heros.html" rel="nofollow"&gt;&lt;span style="font-size: 11pt; color: #1155cc;"&gt;DevOps Days Raleigh 2019: DevOps Heroes - Adding Automation Integration to your Toolbox&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span dir="ltr" style="margin-bottom: 12pt;"&gt;&lt;a class="jive-link-external-small" href="http://www.schabell.org/2019/04/integration-key-to-customer-experience-example-service-integration.html" rel="nofollow"&gt;&lt;span style="font-size: 11pt; color: #1155cc;"&gt;Integration Key to Customer Experience - Example Service Integration&lt;/span&gt;&lt;/a&gt;&lt;span style="font-size: 11pt;"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span dir="ltr" style="margin-top: 12pt; margin-bottom: 12pt;"&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #000000;"&gt;On top of this material, he also took the time to promote upcoming labs at the &lt;/span&gt;&lt;a class="jive-link-external-small" href="https://www.redhat.com/en/summit/2019" rel="nofollow"&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #1155cc;"&gt;Red Hat Summit 2019 (7&amp;#8211;9 May)&lt;/span&gt;&lt;/a&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #000000;"&gt;: &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span dir="ltr" style="margin-top: 12pt;"&gt;&lt;a class="jive-link-external-small" href="http://www.schabell.org/2019/03/red-hat-summit-2019-labs-cloud-native-app-dev-roadmap.html" rel="nofollow"&gt;&lt;span style="font-size: 11pt; color: #1155cc;"&gt;Cloud-native Application Development Labs Roadmap&lt;/span&gt;&lt;/a&gt;&lt;span style="font-size: 11pt;"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span dir="ltr"&gt;&lt;a class="jive-link-external-small" href="http://www.schabell.org/2019/04/red-hat-summit-2019-labs-integration-api-labs-roadmap.html" rel="nofollow"&gt;&lt;span style="font-size: 11pt; color: #1155cc;"&gt;Integration and API Labs Roadmap&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span dir="ltr"&gt;&lt;a class="jive-link-external-small" href="http://www.schabell.org/2019/04/red-hat-summit-2019-it-optimization-labs-roadmap.html" rel="nofollow"&gt;&lt;span style="font-size: 11pt; color: #1155cc;"&gt;IT Optimization Labs Roadmap&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span dir="ltr" style="margin-bottom: 12pt;"&gt;&lt;a class="jive-link-external-small" href="http://www.schabell.org/2019/04/red-hat-summit-2019-emerging-technology-labs-roadmap.html" rel="nofollow"&gt;&lt;span style="font-size: 11pt; color: #1155cc;"&gt;Emerging Technology Labs Roadmap&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span dir="ltr" style="margin-top: 12pt; margin-bottom: 12pt;"&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #000000;"&gt;Last, but certainly not the least, don&amp;#8217;t forget to catch up with the Infinispan project, if you have the opportunity, on the &lt;/span&gt;&lt;a class="jive-link-external-small" href="https://blog.infinispan.org/2019/04/infinispan-on-tour-march-april-2019.html" rel="nofollow"&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #1155cc;"&gt;Infinispan on tour, March-April 2019&lt;/span&gt;&lt;/a&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #000000;"&gt;!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 dir="ltr" style="margin-top: 18pt; margin-bottom: 6pt;"&gt;&lt;span style="font-size: 16pt; font-family: Arial; color: #000000; font-weight: 400;"&gt;Techbytes&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color: #000000; font-size: 11pt; font-family: Arial;"&gt;This editorial is already quite a mouthful, but maybe you can stomach a bit more? If so, take a look the following entries:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span dir="ltr" style="margin-top: 12pt;"&gt;&lt;a class="jive-link-external-small" href="https://blog.infinispan.org/2019/04/operator-021-out-with-dns-ping-and.html?utm_source=feedburner&amp;amp;utm_medium=feed&amp;amp;utm_campaign=Feed:+Infinispan+(Infinispan)" rel="nofollow"&gt;&lt;span style="font-size: 11pt; color: #1155cc;"&gt;Operator 0.2.1 out with DNS ping and expanded customizations&lt;/span&gt;&lt;/a&gt;&lt;span style="font-size: 11pt;"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span dir="ltr"&gt;&lt;a class="jive-link-external-small" href="https://www.keycloak.org/2019/04/keycloak-newsletter-1.html" rel="nofollow"&gt;&lt;span style="font-size: 11pt; color: #1155cc;"&gt;Keycloak Community Newsletter #1&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span dir="ltr" style="margin-bottom: 12pt;"&gt;&lt;a class="jive-link-external-small" href="http://www.ofbizian.com/2019/04/the-next-integration-evolution.html" rel="nofollow"&gt;&lt;span style="font-size: 11pt; color: #1155cc;"&gt;The next integration evolution - blockchain ~ Bilgin Ibryam (@bibryam)&lt;/span&gt;&lt;/a&gt;&lt;span style="font-size: 11pt;"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 dir="ltr" style="margin-top: 18pt; margin-bottom: 6pt;"&gt;&lt;span style="font-size: 16pt; font-family: Arial; color: #000000; font-weight: 400;"&gt;Releases, releases, releases&amp;hellip;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color: #000000; font-size: 11pt; font-family: Arial;"&gt;As always, the JBoss community can go two weeks without a fair amount of new releases. Among the most notable, there is, of course, a new minor version of Quarkus, but also a first major released of Keycloak!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span dir="ltr" style="margin-top: 12pt;"&gt;&lt;a class="jive-link-external-small" href="https://github.com/quarkusio/quarkus/releases/tag/0.13.2" rel="nofollow"&gt;&lt;span style="font-size: 11pt; color: #1155cc;"&gt;Release 0.13.2 &amp;#183; quarkusio/quarkus &amp;#183; GitHub&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span dir="ltr"&gt;&lt;a class="jive-link-external-small" href="https://www.keycloak.org/2019/04/keycloak-600-released.html" rel="nofollow"&gt;&lt;span style="font-size: 11pt; color: #1155cc;"&gt;Keycloak 6.0.0 released&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span dir="ltr"&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2019/04/05/hibernate-search-6-0-0-Alpha4/" rel="nofollow"&gt;&lt;span style="font-size: 11pt; color: #1155cc;"&gt;Hibernate Search 6.0.0.Alpha4 released!&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span dir="ltr"&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2019/04/04/hibernate-orm-600-alpha2-out/" rel="nofollow"&gt;&lt;span style="font-size: 11pt; color: #1155cc;"&gt;Hibernate ORM 6.0.0.Alpha2 released - In Relation To&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span dir="ltr" style="margin-bottom: 12pt;"&gt;&lt;a class="jive-link-external-small" href="https://blog.infinispan.org/2019/04/infinispan-spring-boot-starter-215final.html" rel="nofollow"&gt;&lt;span style="font-size: 11pt; color: #1155cc;"&gt;Infinispan Spring Boot Starter 2.1.5.Final and 1.0.7.Final are out!&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 dir="ltr" style="margin-top: 18pt; margin-bottom: 6pt;"&gt;&lt;span style="font-size: 16pt; font-family: Arial; color: #000000; font-weight: 400;"&gt;D&amp;eacute;caf&amp;#8217;&lt;/span&gt;&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p dir="ltr"&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #000000;"&gt;After digesting that much Java technologies, you are maybe craving for something else, right? Well, let us offer you a nice &lt;/span&gt;&lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/04/16/introduction-to-kubernetes-from-container-to-containers/" rel="nofollow"&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #1155cc;"&gt;Introduction to Kubernetes (From container to containers)&lt;/span&gt;&lt;/a&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #000000;"&gt;, this ought to be a nice change of pace! &lt;/span&gt;&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p dir="ltr"&gt;&lt;span style="font-size: 11pt; font-family: Arial; color: #000000; font-style: italic;"&gt;That's all for this week's edition of the Editorial, please join us next time as we continue our journey through the JBoss Communities in search of interesting articles and news.&amp;#160; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:c2652250-43cc-4543-bbfb-0fd18a0879fd] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/OA_EYVZ8nS8" height="1" width="1" alt=""/&gt;</content><summary>With something things happening lately, we have (again) missed an editorial two weeks ago! All our apology about that, but this one will catch you up if you have missed anything. No surprise, only a few weeks after its releases, Quarkus, and its beloved friend, GraalVM, are still the center of the attention! (as it should be!!!) Quarkus and GraalVM With its recent releases, Quarkus is certainly a ...</summary><dc:creator>Romain Pelisse</dc:creator><dc:date>2019-04-18T17:04:39Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/weekly-editorial/2019/04/18/this-week-in-jboss-18th-april-2019-onward-with-quarkus</feedburner:origLink></entry><entry><title>Red Hat Summit 2019 Labs: Emerging technology roadmap</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/RHpD_mWe1e4/" /><category term="cloud" scheme="searchisko:content:tags" /><category term="events" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="integration" scheme="searchisko:content:tags" /><category term="machine learning" scheme="searchisko:content:tags" /><category term="red hat summit" scheme="searchisko:content:tags" /><category term="storage" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-red_hat_summit_2019_labs_emerging_technology_roadmap</id><updated>2019-04-18T07:07:15Z</updated><published>2019-04-18T07:07:15Z</published><content type="html">&lt;p&gt;&lt;a href="https://www.redhat.com/en/summit/2019" target="_blank" rel="noopener noreferrer"&gt;Red Hat Summit 2019&lt;/a&gt; is rocking Boston, MA, May 7-9 in the &lt;a href="https://www.signatureboston.com/BCEC" target="_blank" rel="noopener noreferrer"&gt;Boston Convention and Exhibition Center&lt;/a&gt;. Everything you need to know about the current state of open source enterprise-ready software can be found at this event. You&amp;#8217;ll find customers talking about their experiences leveraging open source in their solutions, creators of open source technologies you&amp;#8217;re using, and hands-on lab experiences relating to these technologies.&lt;/p&gt; &lt;p&gt;This hands-on appeal is what this series of articles is about. In previous articles, we looked at labs focusing on &lt;a href="https://developers.redhat.com/blog/2019/04/16/two-red-hat-enterprise-linux-8-labs-at-red-hat-summit-2019-definitive-rhel-beta-applications-streams/"&gt;Red Hat Enterprise Linux&lt;/a&gt;, &lt;a href="https://developers.redhat.com/blog/2019/04/12/red-hat-summit-2019-labs-integration-and-apis-roadmap/"&gt;Integration and APIs&lt;/a&gt;, and &lt;a href="https://developers.redhat.com/blog/2019/03/31/red-hat-summit-2019-labs-cloud-native-app-dev-roadmap/"&gt;cloud-native app development&lt;/a&gt;. In this article, we&amp;#8217;ll look at labs in the &amp;#8220;Emerging Technology&amp;#8221; track.&lt;/p&gt; &lt;p&gt;&lt;span id="more-586907"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;The following labs can be found in the &lt;a href="https://summit.redhat.com/conference/sessions" target="_blank" rel="noopener noreferrer"&gt;session catalog online&lt;/a&gt;, by searching on title or filtering on &amp;#8220;instructor-led labs&amp;#8221; and &amp;#8220;emerging technology&lt;i&gt;.&amp;#8221;&lt;/i&gt;&lt;/p&gt; &lt;h3&gt;Analytics and machine learning with Red Hat infrastructure&lt;/h3&gt; &lt;p&gt;As data is exponentially growing in organizations, there is an increasing need to consolidate silos of information into a single source of truth, or &amp;#8220;data lake,&amp;#8221; to feed hungry analytics and machine learning engines that can gather insight at scale.&lt;/p&gt; &lt;p&gt;In this session, we&amp;#8217;ll detail how to architect data infrastructure services using Red Hat OpenShift, Red Hat Ceph Storage, and doing analytics with Spark and TensorFlow. In the hands-on segment of the lab, we&amp;#8217;ll deploy Open Data Hub and use Jupyter notebooks to walk through interacting with data sets using the S3A filesystem client and using Spark schema detection and SparkSQL to query data. We&amp;#8217;ll then look at how to use TensorFlow to create a model to classify data, how to integrate TensorFlow models and Spark, and at how to serve that data using Red Hat OpenShift.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Speakers: Kyle Bader, Sean Pryor, Sherard Griffin&lt;/em&gt;&lt;/p&gt; &lt;h3&gt;Machine learning workflows for application developers&lt;/h3&gt; &lt;p&gt;The capabilities of intelligent applications often seem like magic to users, but the machine learning and artificial intelligence techniques that provide these features are more accessible than you might think. Developing intelligent features doesn’t require esoteric math or high-performance hardware, but it does require you to adapt your existing engineering practice to build and manage predictive models in addition to conventional software artifacts.&lt;/p&gt; &lt;p&gt;This hands-on lab will introduce machine learning workflows and show you how to integrate them into the application development work you’re already doing, focusing on the habits and processes that will help you to get meaningful results from application intelligence. During this lab, Red Hat machine learning experts will help you:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Build intelligent application functionality from the ground up, by training, evaluating, and deploying predictive models.&lt;/li&gt; &lt;li&gt;Incorporate machine learning into your general software development discipline.&lt;/li&gt; &lt;li&gt;See how to apply techniques like continuous integration, iterative development, and monitoring while building intelligent features for your apps.&lt;/li&gt; &lt;li&gt;Learn how the development platforms you love, like Red Hat Middleware and Red Hat OpenShift Container Platform, support every phase of intelligent application development.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;i&gt;Speakers: Sophie Watson, William Benton, Michael McCune&lt;/i&gt;&lt;/p&gt; &lt;h3&gt;Next-gen technologies at scale: Building solutions to manage tomorrow’s workloads&lt;/h3&gt; &lt;p&gt;For emerging technologies like Internet of Things (IoT), virtual reality (VR), and 5G, a large amount of data is generated outside the datacenter—for example, a refinery can generate 1TB data per day. A lot of this data is redundant, yet an event for critical equipment would require a near real-time response. This requires a large amount of data processing at the edge as well as reducing the data volume sent to datacenter or cloud.&lt;/p&gt; &lt;p&gt;In this lab, you&amp;#8217;ll learn how to use a combination of Red Hat technologies, such as Red Hat Decision Manager, Red Hat AMQ streams, and Red Hat OpenShift Container Platform to build integrated solutions to meet most demanding workloads. In particular, we&amp;#8217;ll cover using the features of AMQ streams—such as stream processing, metering, and event sourcing—to build solutions that scale for complex environments. Patterns used in this lab are designed to be extensible, so that you&amp;#8217;ll understand how to implement your own adaptive solutions afterward.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Speakers: Hugo Guerrero, Sam Rang, Andrew Block, Christina &lt;/em&gt;WeiMei&lt;em&gt; Lin, Ishu Verma&lt;/em&gt;&lt;/p&gt; &lt;p&gt;Stay tuned for more articles with insights into other themes that might interest you enough to register for one of these instructor-led labs at &lt;a href="https://www.redhat.com/en/summit/2019"&gt;Red Hat Summit 2019&lt;/a&gt;. We look forward to seeing you there!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F18%2Fred-hat-summit-2019-labs-emerging-technology-roadmap%2F&amp;#38;linkname=Red%20Hat%20Summit%202019%20Labs%3A%20Emerging%20technology%20roadmap" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F18%2Fred-hat-summit-2019-labs-emerging-technology-roadmap%2F&amp;#38;linkname=Red%20Hat%20Summit%202019%20Labs%3A%20Emerging%20technology%20roadmap" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F18%2Fred-hat-summit-2019-labs-emerging-technology-roadmap%2F&amp;#38;linkname=Red%20Hat%20Summit%202019%20Labs%3A%20Emerging%20technology%20roadmap" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F18%2Fred-hat-summit-2019-labs-emerging-technology-roadmap%2F&amp;#38;linkname=Red%20Hat%20Summit%202019%20Labs%3A%20Emerging%20technology%20roadmap" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F18%2Fred-hat-summit-2019-labs-emerging-technology-roadmap%2F&amp;#38;linkname=Red%20Hat%20Summit%202019%20Labs%3A%20Emerging%20technology%20roadmap" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F18%2Fred-hat-summit-2019-labs-emerging-technology-roadmap%2F&amp;#38;linkname=Red%20Hat%20Summit%202019%20Labs%3A%20Emerging%20technology%20roadmap" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F18%2Fred-hat-summit-2019-labs-emerging-technology-roadmap%2F&amp;#38;linkname=Red%20Hat%20Summit%202019%20Labs%3A%20Emerging%20technology%20roadmap" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F18%2Fred-hat-summit-2019-labs-emerging-technology-roadmap%2F&amp;#38;linkname=Red%20Hat%20Summit%202019%20Labs%3A%20Emerging%20technology%20roadmap" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F18%2Fred-hat-summit-2019-labs-emerging-technology-roadmap%2F&amp;#038;title=Red%20Hat%20Summit%202019%20Labs%3A%20Emerging%20technology%20roadmap" data-a2a-url="https://developers.redhat.com/blog/2019/04/18/red-hat-summit-2019-labs-emerging-technology-roadmap/" data-a2a-title="Red Hat Summit 2019 Labs: Emerging technology roadmap"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/18/red-hat-summit-2019-labs-emerging-technology-roadmap/"&gt;Red Hat Summit 2019 Labs: Emerging technology roadmap&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/RHpD_mWe1e4" height="1" width="1" alt=""/&gt;</content><summary>Red Hat Summit 2019 is rocking Boston, MA, May 7-9 in the Boston Convention and Exhibition Center. Everything you need to know about the current state of open source enterprise-ready software can be found at this event. You’ll find customers talking about their experiences leveraging open source in their solutions, creators of open source technologies you’re using, and hands-on lab experiences rel...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-04-18T07:07:15Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/18/red-hat-summit-2019-labs-emerging-technology-roadmap/</feedburner:origLink></entry><entry><title>Monitoring container vitality and availability with Podman</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/UnO-ZvVcdeA/" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Podman" scheme="searchisko:content:tags" /><author><name>Brent Baude</name></author><id>searchisko:content:id:jbossorg_blog-monitoring_container_vitality_and_availability_with_podman</id><updated>2019-04-18T07:00:44Z</updated><published>2019-04-18T07:00:44Z</published><content type="html">&lt;p&gt;Not long after &lt;a href="https://developers.redhat.com/articles/podman-next-generation-linux-container-tools/"&gt;Podman&lt;/a&gt; developed a certain level of stability and functionality we started to hear questions like, “What about container healthchecks?” It was a tough question with no easy, obvious answers. My colleagues and I would occasionally discuss healthchecks, but we are a daemonless environment, which makes this kind of thing challenging. Without a long-running process or daemon to schedule healthchecks, we needed to look at other parts of the operating system to launch them. Recently, the questions grew more pronounced, and it was high time we resolved this for our users.&lt;/p&gt; &lt;p&gt;I am pleased to say that the latest &lt;a href="https://podman.io/releases/"&gt;Podman release 1.2&lt;/a&gt; now has the ability to perform container healthchecks. This article describes healthchecks and explains how we implemented them for Podman.&lt;span id="more-584777"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;What are healthchecks?&lt;/h2&gt; &lt;p&gt;A “healthcheck” is a way in which a user can determine the “health” or readiness of the primary process running inside of a container. It is more than a simple “is my container running?” question. Think of it more like “is my application ready?” So, a healthcheck is really a way to verify that both the container and its applications are responsive.&lt;/p&gt; &lt;p&gt;A healthcheck is made of five basic components:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Command&lt;/li&gt; &lt;li&gt;Retries&lt;/li&gt; &lt;li&gt;Interval&lt;/li&gt; &lt;li&gt;Start-period&lt;/li&gt; &lt;li&gt;Timeout&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;The core of the healthcheck is the &lt;em&gt;command&lt;/em&gt;. Podman will execute the command inside the target container and wait for either a &amp;#8220;0&amp;#8221; or &amp;#8220;failure  exit&amp;#8221; code. For example, if you have a container that runs an Nginx server, your healthcheck command could be something as simple as a curl command successfully connecting to the web port to make sure Nginx is responsive.&lt;/p&gt; &lt;p&gt;The other four components are related to the scheduling of the healthcheck itself. They are optional and have defaults should you choose to not specify values for each one. &lt;em&gt;Retries&lt;/em&gt; defines the number of consecutive failed healthchecks that need to occur before the container is marked as “unhealthy.” A successful healthcheck resets the retry counter.&lt;/p&gt; &lt;p&gt;The &lt;em&gt;interval&lt;/em&gt; metric describes the time between running the healthcheck command. Determining the interval value is a bit of an art. Make it too small and your system will spend a lot of time running healthchecks; make the interval too large and you struggle with catching time outs. The value is a time duration like “30s” or “1h2m.”&lt;/p&gt; &lt;p&gt;&lt;b&gt;Note&lt;/b&gt;: A duration string is a possibly signed sequence of decimal numbers, each with optional fraction and a unit suffix, such as &amp;#8220;300ms,&amp;#8221; &amp;#8220;-1.5h,&amp;#8221; or &amp;#8220;2h45m.&amp;#8221; Valid time units are &amp;#8220;ns,&amp;#8221; &amp;#8220;us,&amp;#8221; (or &amp;#8220;µs&amp;#8221;), &amp;#8220;ms,&amp;#8221; &amp;#8220;s,&amp;#8221; &amp;#8220;m,&amp;#8221; and &amp;#8220;h.&amp;#8221;&lt;/p&gt; &lt;p&gt;The fourth component is the &lt;em&gt;start-period&lt;/em&gt;. This describes the time between when the container starts and when you want to ignore healthcheck failures. Put more simply, if a healthcheck fails during this time, it will not count as a failure. During this time, the container’s healthcheck status will be &lt;em&gt;starting&lt;/em&gt;. If a healthcheck returns successfully, the container’s healthcheck status will change from starting to &lt;em&gt;healthy&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;The last component is the &lt;em&gt;timeout&lt;/em&gt; definition. Like the interval value, it is a time duration. It describes the period of time the healthcheck itself must complete before being considered unsuccessful.&lt;/p&gt; &lt;h2&gt;Show me&lt;/h2&gt; &lt;p&gt;As of Podman 1.2, you can define a healthcheck as part of container creation using the command-line interface. Suppose you want to define a healthcheck and run that healthcheck manually. Healthchecks currently only run for Podman running as root.&lt;/p&gt; &lt;pre&gt;$ sudo podman run -dt --name hc1 --healthcheck-command 'CMD-SHELL curl http://localhost || exit 1' --healthcheck-interval=0 quay.io/libpod/alpine_nginx:latest d25ee6faaf6e5e12c09e734b1ac675385fe4d4e8b52504dd01a60e1b726e3edb $ sudo podman healthcheck run hc1 Healthy $ echo $? 0&lt;/pre&gt; &lt;p&gt;On the &lt;code&gt;podman run&lt;/code&gt; command, note the use of &lt;code&gt;--healthcheck-command&lt;/code&gt; where the healthcheck command itself is defined. Remember that this is a command being run “inside” the container itself. In this case, the curl command needs to be present in the container. Also, notice both the &lt;code&gt;--healthcheck-interval&lt;/code&gt; flag and its &amp;#8220;0&amp;#8221; value. The interval flag defines the time frequency in which to run the healthcheck. The &amp;#8220;0&amp;#8221; value indicates that we want to run the healthcheck manually.&lt;/p&gt; &lt;p&gt;If you were to provide only the command, the healthcheck would not only be defined but also automatically scheduled with defaults.  Podman uses systemd timers to schedule healthcheck runs. If you don’t have systemd, then no automatic scheduling of the healthchecks will occur.  You could use different tools like a “cron” job to schedule the healthchecks, but you would have to do this manually.&lt;/p&gt; &lt;h2&gt;About image and container types&lt;/h2&gt; &lt;p&gt;To really have a strong understanding of healthchecks in Podman, you need to understand there are two predominant image types Podman understands: “docker” and “oci:”. Only Docker image types store healthcheck metadata as part of the image itself. This is described in the &lt;a href="https://docs.docker.com/engine/reference/builder/#healthcheck"&gt;healthcheck section&lt;/a&gt; of the Docker reference builder. The OCI Image Specification does not include a healthcheck definition. The fact that an OCI image cannot embed or retain the healthcheck metadata actually has resulted in a very flexible approach to defining (and sometimes redefining) healthchecks themselves.&lt;/p&gt; &lt;div id="attachment_584797" style="width: 518px" class="wp-caption alignnone"&gt;&lt;img aria-describedby="caption-attachment-584797" class="wp-image-584797 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/hc1-e1554734939726.png" alt="" width="508" height="348" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/hc1-e1554734939726.png 508w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/hc1-e1554734939726-300x206.png 300w" sizes="(max-width: 508px) 100vw, 508px" /&gt;&lt;p id="caption-attachment-584797" class="wp-caption-text"&gt;Figure 1: Origin of healthcheck metadata and its path to a Podman container.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Figure 1 shows the origin of healthcheck metadata and how it becomes part of a Podman container. As mentioned earlier, a Docker image can contain the metadata, and this metadata can be passed onto a Podman container. If the healthcheck defined in a Docker image isn’t sufficient, the metadata of a Docker image can be overridden by the podman CLI. In the case of an OCI image, heathchecks can only be defined with the CLI.&lt;/p&gt; &lt;p&gt;The healthcheck metadata that is defined for a container cannot be “saved” to an OCI image for reuse. The Podman &lt;code&gt;commit&lt;/code&gt; command, for example, which allows users to create an image from a Podman image and defaults to an “oci” format; however, you can switch the format to “docker” and the healthcheck will be part of the resulting image.&lt;/p&gt; &lt;h2&gt;How healthchecks work in Podman&lt;/h2&gt; &lt;p&gt;Podman’s implementation of healthchecks can be categorized in three pieces (as shown in Figure 2):&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Image and container metadata&lt;/li&gt; &lt;li&gt;Logging&lt;/li&gt; &lt;li&gt;Scheduling&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;The first piece is the image and container metadata discussed in the previous section.  It is in fact the core piece of healthchecks, and a healthcheck cannot exist without it.&lt;/p&gt; &lt;div id="attachment_584807" style="width: 310px" class="wp-caption alignnone"&gt;&lt;img aria-describedby="caption-attachment-584807" class="wp-image-584807 size-medium" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/hc2-e1554735221828-300x244.png" alt="" width="300" height="244" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/hc2-e1554735221828-300x244.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/hc2-e1554735221828.png 388w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;p id="caption-attachment-584807" class="wp-caption-text"&gt;Figure 2: Three main pieces of healthchecks.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;A log file for healthchecks is also created. It retains the container’s health status as well as history including previous healthcheck attempts. And finally, the scheduling is done by systemd. When a container starts and has a healthcheck, Podman performs a transient setup of a .service and .timer file.  This simply means that the .service and .timer files are not permanent and can be lost on reboot. In fact, if you stop the same container, the .service and .timer files are removed; the same is true if you manually stop the transient timer or service. As you might have concluded, the .timer file defines the scheduling aspect (intervals) and the .service contains the Podman healthcheck command.&lt;/p&gt; &lt;h3&gt;Transient healthcheck timer&lt;/h3&gt; &lt;p&gt;The following is an example timer file that Podman created for a container beginning with `81b9…`.  This particular container has a 30-second interval defined.&lt;/p&gt; &lt;pre&gt;$ cat 81b9da5145f9d2ab3f6ab27e4ec15e95d8975f796be819248f149a617aa3055f.timer # This is a transient unit file, created programmatically via the systemd API. Do not edit. [Unit] Description=/usr/bin/podman healthcheck run 81b9da5145f9d2ab3f6ab27e4ec15e95d8975f796be819248f149a617aa3055f [Timer] OnUnitInactiveSec=30s AccuracySec=1s RemainAfterElapse=no&lt;/pre&gt; &lt;h3&gt;Transient healthcheck service&lt;/h3&gt; &lt;p&gt;When Podman creates a transient service file, it will look something like the below:&lt;/p&gt; &lt;pre&gt;$ cat 81b9da5145f9d2ab3f6ab27e4ec15e95d8975f796be819248f149a617aa3055f.service # This is a transient unit file, created programmatically via the systemd API. Do not edit. [Unit] Description=/usr/bin/podman healthcheck run 81b9da5145f9d2ab3f6ab27e4ec15e95d8975f796be819248f149a617aa3055f [Service] ExecStart= ExecStart=@/usr/bin/podman "/usr/bin/podman" "healthcheck" "run" "81b9da5145f9d2ab3f6ab27e4ec15e95d8975f796be819248f149a617aa3055f" &lt;/pre&gt; &lt;p&gt;Note that if your system does not have systemd, you can still use Podman healthchecks. Podman only uses systemd handle healthcheck timing. You could use cron or some other scheduling application. Moreover, you can manually run the healthcheck command using Podman, and the container’s health and logs will be updated accordingly.&lt;/p&gt; &lt;h2&gt;Interacting with the results of healthchecks&lt;/h2&gt; &lt;p&gt;You can use Podman to interact with healthcheck results and status.  The most direct way is using &lt;code&gt;podman inspect&lt;/code&gt; on the container. Suppose I create a container running Nginx and define a healthcheck as follows:&lt;/p&gt; &lt;pre&gt;$ sudo podman run -dt --name hc --healthcheck-start-period 2m --healthcheck-retries 5 --healthcheck-command "CMD-SHELL curl http://localhost  || exit 1" quay.io/libpod/alpine_nginx:latest 164747229c31eb0214c2aa63997171104e38f93d8aa4d5e315b16679213c078d&lt;/pre&gt; &lt;p&gt;With this healthcheck definition, the command runs curl to make sure Nginx is responsive. The retry limit is set to 5 and I provided a two-minute start-period. The interval will default to a value of 30 seconds. After letting the container run a few seconds, we can inspect the container to see both the healthcheck status and later the configuration.&lt;/p&gt; &lt;p&gt;In the output of the inspect command, we can see the healthcheck status is set to &lt;em&gt;healthy&lt;/em&gt; and even a log of the curl command that was executed. The start and stop times are also recorded.&lt;/p&gt; &lt;pre&gt;$ sudo podman inspect hc [    {        "ID": "164747229c31eb0214c2aa63997171104e38f93d8aa4d5e315b16679213c078d",        "Created": "2019-03-26T14:27:21.928727195-05:00",        "Path": "nginx",        "Args": [            "-g",            "daemon off;"        ],        "State": {            "OciVersion": "1.0.1-dev",            "Status": "running",            "Running": true,            "Paused": false, ...            "StartedAt": "2019-03-26T14:27:22.439699271-05:00",            "FinishedAt": "0001-01-01T00:00:00Z",            "Healthcheck": {                "Status": "healthy",                "FailingStreak": 0,                "Log": [                    {                        "Start": "2019-03-26T14:27:22.597838221-05:00",                        "End": "2019-03-26T14:27:22.847910361-05:00",                        "ExitCode": 0,                        "Output": "  % Total    % Received % Xferd  Average Speed Time    Time     Time  Current\n                                 Dload  Upload  Total Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r100    12  100    12    0     0  12000      0 --:--:-- --:--:-- --:--:-- 12000\npodman rulez"                    }                ]            }        },        "Image": "3ef70f7291f47dfe2b82931a993e16f5a44a0e7a68034c3e0e086d77f5829adc",        "ImageName": "quay.io/libpod/alpine_nginx:latest", ...        "Config": {            ...            "StopSignal": 15,            "Healthcheck": {                "Test": [                    "&lt;a href="https://docs.docker.com/engine/reference/builder/#healthcheck"&gt;CMD-SHELL&lt;/a&gt;",                    "curl",                    "http://localhost",                    "||",                    "exit",                    "1"                ],                "StartPeriod": 120000000000,                "Interval": 30000000000,                "Timeout": 30000000000,                "Retries": 5            }        }    } ]&lt;/pre&gt; &lt;p&gt;As part of the &lt;code&gt;podman inspect&lt;/code&gt; output, we can also see the healthcheck configuration as container metadata. The field &lt;em&gt;Test&lt;/em&gt; refers to the healthcheck command. The &lt;em&gt;start-period&lt;/em&gt;, &lt;em&gt;interval&lt;/em&gt;, and &lt;em&gt;timeout&lt;/em&gt; are converted to milliseconds. And &lt;em&gt;retries&lt;/em&gt; is a simple integer.&lt;/p&gt; &lt;p&gt;You can also get a summary view of container healthcheck status by using a filter with the &lt;code&gt;podman ps&lt;/code&gt; command.&lt;/p&gt; &lt;pre&gt;$ sudo podman ps -a --filter health=healthy CONTAINER ID  IMAGE                      COMMAND               CREATED         STATUS             PORTS  NAMES 71dac13c36d9  quay.io/libpod/alpine_nginx:latest  nginx -g daemon o... 27 seconds ago  Up 27 seconds ago     hc2 164747229c31  quay.io/libpod/alpine_nginx:latest  nginx -g daemon o... 14 minutes ago  Up 14 minutes ago     hc&lt;/pre&gt; &lt;p&gt;When using a filter for health, you may use a value of &lt;em&gt;healthy&lt;/em&gt;, &lt;em&gt;starting&lt;/em&gt;, or &lt;em&gt;unhealthy&lt;/em&gt;.&lt;/p&gt; &lt;h2&gt;Wrap-Up&lt;/h2&gt; &lt;p&gt;The inclusion of healthchecks in Podman opens some interesting future possibilities. We certainly have entertained the recent addition of events in Podman and the possible interaction between events and things like healthchecks. Another idea is to apply the concept of healthchecks to pods and whether using side-car containers could be an ideal solution. This would allow us to concentrate on the healthcheck at the pod level and even outside the containers themselves. And finally, it could be of great use to associate a restart policy to healthchecks resulting in the ability to actually take &lt;em&gt;action&lt;/em&gt; when a container or pod becomes “unhealthy.”&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F18%2Fmonitoring-container-vitality-and-availability-with-podman%2F&amp;#38;linkname=Monitoring%20container%20vitality%20and%20availability%20with%20Podman" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F18%2Fmonitoring-container-vitality-and-availability-with-podman%2F&amp;#38;linkname=Monitoring%20container%20vitality%20and%20availability%20with%20Podman" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F18%2Fmonitoring-container-vitality-and-availability-with-podman%2F&amp;#38;linkname=Monitoring%20container%20vitality%20and%20availability%20with%20Podman" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F18%2Fmonitoring-container-vitality-and-availability-with-podman%2F&amp;#38;linkname=Monitoring%20container%20vitality%20and%20availability%20with%20Podman" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F18%2Fmonitoring-container-vitality-and-availability-with-podman%2F&amp;#38;linkname=Monitoring%20container%20vitality%20and%20availability%20with%20Podman" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F18%2Fmonitoring-container-vitality-and-availability-with-podman%2F&amp;#38;linkname=Monitoring%20container%20vitality%20and%20availability%20with%20Podman" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F18%2Fmonitoring-container-vitality-and-availability-with-podman%2F&amp;#38;linkname=Monitoring%20container%20vitality%20and%20availability%20with%20Podman" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F18%2Fmonitoring-container-vitality-and-availability-with-podman%2F&amp;#38;linkname=Monitoring%20container%20vitality%20and%20availability%20with%20Podman" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F18%2Fmonitoring-container-vitality-and-availability-with-podman%2F&amp;#038;title=Monitoring%20container%20vitality%20and%20availability%20with%20Podman" data-a2a-url="https://developers.redhat.com/blog/2019/04/18/monitoring-container-vitality-and-availability-with-podman/" data-a2a-title="Monitoring container vitality and availability with Podman"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/18/monitoring-container-vitality-and-availability-with-podman/"&gt;Monitoring container vitality and availability with Podman&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/UnO-ZvVcdeA" height="1" width="1" alt=""/&gt;</content><summary>Not long after Podman developed a certain level of stability and functionality we started to hear questions like, “What about container healthchecks?” It was a tough question with no easy, obvious answers. My colleagues and I would occasionally discuss healthchecks, but we are a daemonless environment, which makes this kind of thing challenging. Without a long-running process or daemon to schedule...</summary><dc:creator>Brent Baude</dc:creator><dc:date>2019-04-18T07:00:44Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/18/monitoring-container-vitality-and-availability-with-podman/</feedburner:origLink></entry><entry><title>Red Hat Summit 2019: IT Optimization Labs Roadmap</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/uwXzQUHtLIY/red-hat-summit-2019-it-optimization-labs-roadmap.html" /><category term="conference" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="OpenStack" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-red_hat_summit_2019_it_optimization_labs_roadmap</id><updated>2019-04-18T05:00:01Z</updated><published>2019-04-18T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;a href="https://reg.summit.redhat.com/" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;" target="_blank"&gt;&lt;img border="0" data-original-height="389" data-original-width="769" height="161" src="https://1.bp.blogspot.com/-yX0WaXZmaTI/XJj8CSvWUlI/AAAAAAAAth4/4Z1aZQ7VOp061sKNZ-_kMauutZPP46AMgCLcBGAs/s320/Screenshot%2B2019-03-25%2Bat%2B17.04.08.png" width="320" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://www.redhat.com/en/summit/2019" target="_blank"&gt;Red Hat Summit 2019&lt;/a&gt; is rocking Boston, MA from May 7-9th in the &lt;a href="https://www.signatureboston.com/BCEC" target="_blank"&gt;Boston Convention and Exhibition Center&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;Everything you need to know about the current state of open source enterprise ready software can be found at this event. From customers talking about their experiences leveraging open source in their solutions, to the creators of open source technologies you're using, and all the way down to hands-on lab experiences on these technologies.&lt;br /&gt;&lt;br /&gt;This hands-on appeal is what this series of articles is about. It's&amp;nbsp;interesting to take a tour, so starting with this article let's examine a series of instructor-led labs based on a specific theme.&lt;br /&gt;&lt;br /&gt;This week it's a roadmap to &lt;i&gt;IT optimization&amp;nbsp;&lt;/i&gt;lab content.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;The following labs can be found in the &lt;a href="https://summit.redhat.com/conference/sessions" target="_blank"&gt;session catalog online&lt;/a&gt;, by searching on title or filtering on &lt;i&gt;instructor-led labs &lt;/i&gt;and &lt;i&gt;IT optimization.&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Red Hat IT features: Sidecar that authentication&lt;/h3&gt;&lt;i&gt;Ever wonder how Red Hat makes use of all the insanely powerful Red Hat open source technologies internally to support their operations? Want to take a peek in inside and learn to use these technologies just like we do? Join this lab for hands-on exercises that show you how Red Hat IT is beginning to protect our Red Hat OpenShift-hosted web microservices using sidecar containers as authentication proxies. This approach allows our developers to stay focused on writing code and our identity team to focus on creating a secure, uniform, well-documented, and easily scalable authentication solution.&lt;br /&gt;&lt;br /&gt;In this lab, you'll:&lt;br /&gt;&lt;/i&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;Build and deploy a web service in Red Hat OpenShift Container Platform.&lt;/i&gt;&lt;/li&gt;&lt;i&gt;&lt;li&gt;Stand up an Red Hat Single Sign-On server.&lt;/li&gt;&lt;li&gt;Create a secure endpoint in that web service.&lt;/li&gt;&lt;li&gt;Build and attach an authentication sidecar proxy to that web service.&lt;/li&gt;&lt;li&gt;Configure the Red Hat Single Sign-On server and the sidecar proxy to work together.&lt;/li&gt;&lt;/i&gt;&lt;/ul&gt;&lt;i&gt;Speakers: Dustin Minnich, Lauren Santiago, Alec Henninger, Henry Graham&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Linux container internals 2.0&lt;/h3&gt;&lt;i&gt;What's the difference between a container runtime and a container engine? How about container images and repositories? Are you having trouble making heads or tails of all of the great Kubernetes projects you see? Are you and your team debating architecture, because it seems like everybody has slightly different interpretations of how things work under the covers? If you have answered, "Uhm," to any one of these questions, then this lab's for you.&lt;br /&gt;&lt;br /&gt;Join Red Hat engineers as we walk you through the deep, dark internals of the container host and what’s packaged in the container image. This hands-on lab will give you the knowledge and confidence you need to take advantage of your current Linux technical knowledge and apply it to containers. We'll cover:&lt;br /&gt;&lt;/i&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;Images&lt;/i&gt;&lt;/li&gt;&lt;i&gt;&lt;li&gt;Registries&lt;/li&gt;&lt;li&gt;Hosts&lt;/li&gt;&lt;li&gt;Orchestration&lt;/li&gt;&lt;li&gt;Tools (runtimes, engines, build)&lt;/li&gt;&lt;li&gt;Standards (Open Containers Initiative)&lt;/li&gt;&lt;li&gt;Security&lt;/li&gt;&lt;li&gt;Performance&lt;/li&gt;&lt;/i&gt;&lt;/ul&gt;&lt;i&gt;Speakers: Daniel Walsh, Jamie Duncan, John Osborne, Rodrigo Freire, Scott McCarty&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;A practical introduction to container security using CRI-O&lt;/h3&gt;&lt;i&gt;Linux containers provide convenient application packing and runtime isolation in multi-tenant environments. However, the security implications of running containerized applications is often taken for granted. For example, today it's very easy to pull container images from the internet and run them in the enterprise without examining their content and authenticity.&lt;br /&gt;&lt;br /&gt;In this lab, you'll complete a series of low-level, hands-on exercises aimed at understanding the concepts, challenges, and best practices associated with deploying containers in a secure fashion. Topics include registry configuration, SELinux, process capabilities, SECCOMP profiles, along with container image inspection, scanning, and signing. This fourth edition is based on CRI-O, an Open Container Initiative (OCI) compatible, open source implementation of the Kubernetes Container Runtime Interface (CRI).&lt;br /&gt;&lt;br /&gt;Speakers: Bob Kozdemba, Daniel Walsh, Runal Patrel&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Migrating from VMware to Red Hat platforms&lt;/h3&gt;&lt;i&gt;As digital transformation begins to takes hold, many companies are looking to cut costs and optimize workloads across common platforms in order to divert spending to innovation. Red Hat infrastructure migration solutions provide the ability to move workloads off costly VMware to budget-friendly Red Hat platforms such as Red Hat Virtualization, Red Hat OpenStack Platform, and Red Hat container-native virtualization. In this hands-on lab, we'll cover how to optimize your infrastructure using the Red Hat infrastructure migration solution to migrate workloads from VMware to Red Hat platform technologies based on libvirt.&lt;br /&gt;&lt;br /&gt;Speakers: Brett Thurber, Miguel PerezColino, Christian Jung, Fabien Dupont, Kedar Kulkarni, Nenad Perić&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Defend yourself using built-in Red Hat Enterprise Linux security technologies&lt;/h3&gt;&lt;i&gt;In this lab, you'll learn about the built-in security technologies in Red Hat Enterprise Linux. Specifically, you'll:&lt;br /&gt;&lt;/i&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;Use OpenSCAP to scan and remediate against vulnerabilities and configuration security baselines.&lt;/i&gt;&lt;/li&gt;&lt;i&gt;&lt;li&gt;Block possible attacks from vulnerabilities using SELinux and use Network Bound Disk Encryption to securely decrypt your encrypted boot volumes unattended.&lt;/li&gt;&lt;li&gt;Take advantage of the system-wide crypto policies and use USBGuard to implement basic whitelisting and blacklisting to define which USB devices are authorized.&lt;/li&gt;&lt;li&gt;See how to deploy opportunistic IPsec to encrypt all host to host communication.&lt;/li&gt;&lt;/i&gt;&lt;/ul&gt;&lt;i&gt;Throughout the lab, you'll use audit logs and the Cockpit web console for easier centralized management. You'll:&lt;br /&gt;&lt;/i&gt;&lt;br /&gt;&lt;ul&gt;&lt;i&gt;&lt;li&gt;Take advantage of session logging and playback features and AIDE to look for abnormal behavior.&lt;/li&gt;&lt;li&gt;See how to create a single sign-on environment for all your Linux servers using Red Hat Identity Management.&lt;/li&gt;&lt;li&gt;Learn about GPG, which can be used to identify yourself and encrypt your communications.&lt;/li&gt;&lt;li&gt;See how to use firewalld to dynamically manage firewall rules.&lt;/li&gt;&lt;li&gt;With systems roles, see how to make multiple automated configuration changes across different versions of Red Hat Enterprise Linux using Red Hat Ansible Automation.&lt;/li&gt;&lt;/i&gt;&lt;/ul&gt;&lt;i&gt;Speakers: Lucy Kerner, Lukas Vrabec, Marek Haičman, Peter Beniaris, Simo Sorce&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Private cloud lab with OpenStack, Ansible, and CloudForms&lt;/h3&gt;&lt;i&gt;Do you recognise the value of cloud, but are apprehensive about going public because of security, loss of control, or regulatory compliance? You may benefit from implementing a private cloud.&lt;br /&gt;&lt;br /&gt;In this lab you'll get some hands-on experience with a private cloud based on:&lt;br /&gt;&lt;/i&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;Red Hat OpenStack Platform, managing the infrastructure layer.&lt;/i&gt;&lt;/li&gt;&lt;i&gt;&lt;li&gt;Red Hat Ansible Tower, providing automation capabilities.&lt;/li&gt;&lt;li&gt;Red Hat CloudForms, adding service catalog capabilities to the mix.&lt;/li&gt;&lt;/i&gt;&lt;/ul&gt;&lt;i&gt;By the end of the session, you'll have deployed a complete application through the integration of all these components.&lt;br /&gt;&lt;br /&gt;Speakers: Robert Calva, Vagner Farias, Davi Garcia, Mauricio Santacruz&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Automate your security by creating custom security content&lt;/h3&gt;&lt;i&gt;Are you responsible for system security? Are you concerned about ever-increasing security threats? Are you concerned that automation of security compliance may not be the solution, because it's too difficult to implement if you have to adhere to specific security policies?&lt;br /&gt;&lt;br /&gt;Then don't worry too much. In this lab, we'll show how Red Hat helps you automate security compliance using tools that are part of Red Hat Enterprise Linux. We'll show you how to overcome the greatest challenge—reuse of existing content and integration with custom security policies that lead to the highest quality of automated security compliance. Get to know the already-available, well-proven security content that's based on DISA STIG, PCI-DSS, and other standards. See how this content already allows automated scanning and remediations of non-compliant systems. Then, learn how to customize the existing content and how to extend it, so it accurately reflects your security policy.&lt;br /&gt;&lt;br /&gt;We'll begin this lab with a short presentation, followed by a common instructor-led part to show how to use existing content to evaluate compliance. Then, we'll continue with self-paced learning on how to customize an existing profile and use it to scan and remediate a non-compliant system. Finally, you'll create your security policy from scratch, including tests of scans and remediations.&lt;br /&gt;&lt;br /&gt;Speakers: Marek Haičman, Matěj Týč, Lucy Kerner, Lukas Vrabec, Simo Sorce&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Managing deployed Red Hat Enterprise Linux across infrastructures&lt;/h3&gt;&lt;i&gt;In this lab, we'll cover how to more efficiently manage Red Hat Enterprise Linux with the new Red Hat Insights management capabilities that are included with your Red Hat Enterprise Linux subscription.&lt;br /&gt;&lt;br /&gt;Speakers: Scott McBrien, William Nix, Camry Fedei&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;Stay tuned for more articles with insights into other themes that might interest you enough to register for one of these instructor-led labs at Red Hat Summit 2019.&lt;br /&gt;&lt;br /&gt;Looking forward to seeing you there!&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=nS3163j8Jfw:OuUGSAUlzic:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=nS3163j8Jfw:OuUGSAUlzic:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=nS3163j8Jfw:OuUGSAUlzic:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=nS3163j8Jfw:OuUGSAUlzic:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=nS3163j8Jfw:OuUGSAUlzic:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=nS3163j8Jfw:OuUGSAUlzic:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=nS3163j8Jfw:OuUGSAUlzic:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=nS3163j8Jfw:OuUGSAUlzic:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=nS3163j8Jfw:OuUGSAUlzic:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=nS3163j8Jfw:OuUGSAUlzic:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=nS3163j8Jfw:OuUGSAUlzic:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/nS3163j8Jfw" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/uwXzQUHtLIY" height="1" width="1" alt=""/&gt;</content><summary>Red Hat Summit 2019 is rocking Boston, MA from May 7-9th in the Boston Convention and Exhibition Center. Everything you need to know about the current state of open source enterprise ready software can be found at this event. From customers talking about their experiences leveraging open source in their solutions, to the creators of open source technologies you're using, and all the way down to ha...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-04-18T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/nS3163j8Jfw/red-hat-summit-2019-it-optimization-labs-roadmap.html</feedburner:origLink></entry><entry><title>Red Hat Developer Toolset 8.1 Beta now available</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/446xvn7jQSk/" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="binutils" scheme="searchisko:content:tags" /><category term="C++" scheme="searchisko:content:tags" /><category term="elfutils" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="gcc" scheme="searchisko:content:tags" /><category term="GCC 8" scheme="searchisko:content:tags" /><category term="gdb" scheme="searchisko:content:tags" /><category term="Red Hat Developer Toolset" scheme="searchisko:content:tags" /><category term="Red Hat Enterprise Linux" scheme="searchisko:content:tags" /><category term="valgrind" scheme="searchisko:content:tags" /><author><name>Mike Guerette</name></author><id>searchisko:content:id:jbossorg_blog-red_hat_developer_toolset_8_1_beta_now_available</id><updated>2019-04-17T14:30:53Z</updated><published>2019-04-17T14:30:53Z</published><content type="html">&lt;p&gt;&lt;a href="https://developers.redhat.com/videos/youtube/_CHQVnkk70E/"&gt;Red Hat Developer Toolset&lt;/a&gt; augments Red Hat Enterprise Linux with the latest, stable versions of GCC that install alongside the original base version. This version of Red Hat Developer Toolset 8.1 Beta includes the following new components:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;GCC 8.2.1&lt;/li&gt; &lt;li&gt;GDB 8.2&lt;/li&gt; &lt;li&gt;binutils 2.30&lt;/li&gt; &lt;li&gt;elfutils 0.176&lt;/li&gt; &lt;li&gt;Valgrind 3.14.0&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;This Beta release is supported on Red Hat Enterprise Linux 6 and Red Hat Enterprise Linux 7 for AMD64 and Intel 64 architectures. It also supports the following architectures on Red Hat Enterprise Linux 7:  64-bit ARM, big- and little-endian variants of IBM POWER (), and IBM Z. See below for more information about each updated component.&lt;br /&gt; &lt;span id="more-585967"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Red Hat Developer Toolset 8.1 Beta component details&lt;/h2&gt; &lt;p&gt;GCC 8.2.1 provides numerous bug fixes over the version included in DTS 8: &lt;code&gt;yum install devtoolset-81&lt;/code&gt;&lt;/p&gt; &lt;p&gt;GDB 8.2 provides a number of enhancements over the version included in DTS 8. It can now access these additional registers of the POWER8 processor of the IBM POWER Systems architecture:&lt;/p&gt; &lt;p class="title"&gt;&lt;code class="literal"&gt;PPR&lt;/code&gt;, &lt;code class="literal"&gt;DSCR&lt;/code&gt;, &lt;code class="literal"&gt;TAR&lt;/code&gt;, &lt;code class="literal"&gt;EBB/PMU&lt;/code&gt;registers, and &lt;code class="literal"&gt;HTM&lt;/code&gt; registers.&lt;/p&gt; &lt;p&gt;binutils 2.30 provides a number of changes over the version included in DTS 8. Previously, using the GOLD linker was experimentally enabled for the IBM POWER Systems architecture. Because the linker was not fully functional, it has been disabled in Red Hat Developer Toolset 8.1 Beta.&lt;/p&gt; &lt;p&gt;elfutils 0.176 provides several enhancements over the DTS 8 version, including:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Various bugs related to multiple CVEs have been fixed.&lt;/li&gt; &lt;li&gt;The &lt;code class="literal"&gt;libdw&lt;/code&gt; library has been extended with the &lt;code class="literal"&gt;dwelf_elf_begin()&lt;/code&gt; function, which is a variant of &lt;code class="literal"&gt;elf_begin()&lt;/code&gt; that handles compressed files.&lt;/li&gt; &lt;li&gt;The &lt;code class="literal"&gt;eu-readelf&lt;/code&gt; tool now recognizes and prints out GNU Property notes and GNU Build Attribute ELF Notes with the &lt;code class="literal"&gt;--notes&lt;/code&gt; or &lt;code class="literal"&gt;-n&lt;/code&gt; options.&lt;/li&gt; &lt;li&gt;A new &lt;code class="literal"&gt;--reloc-debug-sections-only&lt;/code&gt; option has been added to the &lt;code class="literal"&gt;eu-strip&lt;/code&gt;tool to resolve all trivial relocations between debug sections in place without any other stripping. This functionality is relevant only for &lt;code class="literal"&gt;ET_REL&lt;/code&gt; files in certain circumstances.&lt;/li&gt; &lt;/ul&gt; &lt;section id="sect-Changes_in_Version_8.1-Valgrind" class="section"&gt; &lt;p class="title"&gt;Valgrind 3.14.0 provides a number of enhancements over the DTS 8 version including:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Support for the z13 instruction set of the IBM Z architecture has been added.&lt;/li&gt; &lt;li&gt;Support for vector instructions of the IBM POWER Systems architecture has been improved.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Resources&lt;/h2&gt; &lt;p&gt;For more details about this release, view the user documentation:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_developer_toolset/8-beta/html-single/user_guide"&gt;DTS 8.1 Beta User Guide&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_developer_toolset/8-beta/html-single/8.1_release_notes/index"&gt;DTS 8.1 Beta Release Notes&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_developer_toolset/8/html-single/user_guide/index#tabl-Red_Hat_Developer_Toolset-About"&gt;Complete list&lt;/a&gt; of DTS 8.1 Beta components&lt;/li&gt; &lt;/ul&gt; &lt;/section&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F17%2Fred-hat-developer-toolset-8-1-beta-now-available%2F&amp;#38;linkname=Red%20Hat%20Developer%20Toolset%208.1%20Beta%20now%20available" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F17%2Fred-hat-developer-toolset-8-1-beta-now-available%2F&amp;#38;linkname=Red%20Hat%20Developer%20Toolset%208.1%20Beta%20now%20available" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F17%2Fred-hat-developer-toolset-8-1-beta-now-available%2F&amp;#38;linkname=Red%20Hat%20Developer%20Toolset%208.1%20Beta%20now%20available" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F17%2Fred-hat-developer-toolset-8-1-beta-now-available%2F&amp;#38;linkname=Red%20Hat%20Developer%20Toolset%208.1%20Beta%20now%20available" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F17%2Fred-hat-developer-toolset-8-1-beta-now-available%2F&amp;#38;linkname=Red%20Hat%20Developer%20Toolset%208.1%20Beta%20now%20available" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F17%2Fred-hat-developer-toolset-8-1-beta-now-available%2F&amp;#38;linkname=Red%20Hat%20Developer%20Toolset%208.1%20Beta%20now%20available" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F17%2Fred-hat-developer-toolset-8-1-beta-now-available%2F&amp;#38;linkname=Red%20Hat%20Developer%20Toolset%208.1%20Beta%20now%20available" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F17%2Fred-hat-developer-toolset-8-1-beta-now-available%2F&amp;#38;linkname=Red%20Hat%20Developer%20Toolset%208.1%20Beta%20now%20available" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F17%2Fred-hat-developer-toolset-8-1-beta-now-available%2F&amp;#038;title=Red%20Hat%20Developer%20Toolset%208.1%20Beta%20now%20available" data-a2a-url="https://developers.redhat.com/blog/2019/04/17/red-hat-developer-toolset-8-1-beta-now-available/" data-a2a-title="Red Hat Developer Toolset 8.1 Beta now available"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/17/red-hat-developer-toolset-8-1-beta-now-available/"&gt;Red Hat Developer Toolset 8.1 Beta now available&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/446xvn7jQSk" height="1" width="1" alt=""/&gt;</content><summary>Red Hat Developer Toolset augments Red Hat Enterprise Linux with the latest, stable versions of GCC that install alongside the original base version. This version of Red Hat Developer Toolset 8.1 Beta includes the following new components: GCC 8.2.1 GDB 8.2 binutils 2.30 elfutils 0.176 Valgrind 3.14.0 This Beta release is supported on Red Hat Enterprise Linux 6 and Red Hat Enterprise Linux 7 for A...</summary><dc:creator>Mike Guerette</dc:creator><dc:date>2019-04-17T14:30:53Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/17/red-hat-developer-toolset-8-1-beta-now-available/</feedburner:origLink></entry></feed>
